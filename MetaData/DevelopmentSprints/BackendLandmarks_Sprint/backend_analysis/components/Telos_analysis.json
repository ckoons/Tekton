{
  "component": "Telos",
  "files": [
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/setup.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "setuptools.setup",
            "from": "setuptools",
            "name": "setup",
            "alias": null,
            "line": 3
          },
          {
            "module": "setuptools.find_packages",
            "from": "setuptools",
            "name": "find_packages",
            "alias": null,
            "line": 3
          },
          {
            "module": "os",
            "alias": null,
            "line": 4
          }
        ],
        "patterns": [
          {
            "type": "websocket",
            "location": "file",
            "line": 0
          },
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 49,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 44,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the Telos client.\n\nArgs:\n    component_id: ID of the Telos component to connect to (default: \"telos.requirements\")\n    hermes_url: URL of the Hermes API\n    security_context: Security context for authentication/authorization\n    retry_policy: Policy for retrying capability invocations",
            "args": [
              "self",
              "component_id",
              "hermes_url",
              "security_context",
              "retry_policy"
            ],
            "class": "TelosClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "create_project",
            "line": 67,
            "async": true,
            "decorators": [],
            "docstring": "Create a new requirements project.\n\nArgs:\n    name: Name of the project\n    description: Optional description of the project\n    metadata: Optional additional metadata for the project\n    \nReturns:\n    Dictionary with project information (including project_id)\n    \nRaises:\n    CapabilityInvocationError: If the project creation fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "name",
              "description",
              "metadata"
            ],
            "class": "TelosClient",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "create_requirement",
            "line": 106,
            "async": true,
            "decorators": [],
            "docstring": "Create a new requirement within a project.\n\nArgs:\n    project_id: ID of the project to add the requirement to\n    title: Title of the requirement\n    description: Description of the requirement\n    priority: Optional priority level (e.g., \"high\", \"medium\", \"low\")\n    requirement_type: Optional type of requirement (e.g., \"functional\", \"performance\")\n    metadata: Optional additional metadata for the requirement\n    \nReturns:\n    Dictionary with requirement information (including requirement_id)\n    \nRaises:\n    CapabilityInvocationError: If the requirement creation fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "project_id",
              "title",
              "description",
              "priority",
              "requirement_type",
              "metadata"
            ],
            "class": "TelosClient",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "get_project",
            "line": 158,
            "async": true,
            "decorators": [],
            "docstring": "Get information about a project.\n\nArgs:\n    project_id: ID of the project to get\n    \nReturns:\n    Dictionary with project information\n    \nRaises:\n    CapabilityInvocationError: If the project retrieval fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "project_id"
            ],
            "class": "TelosClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_requirements",
            "line": 184,
            "async": true,
            "decorators": [],
            "docstring": "Get requirements for a project.\n\nArgs:\n    project_id: ID of the project to get requirements for\n    filters: Optional filters to apply (e.g., priority, type)\n    \nReturns:\n    List of dictionaries with requirement information\n    \nRaises:\n    CapabilityInvocationError: If the requirements retrieval fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "project_id",
              "filters"
            ],
            "class": "TelosClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "analyze_requirements",
            "line": 218,
            "async": true,
            "decorators": [],
            "docstring": "Analyze requirements for a project.\n\nArgs:\n    project_id: ID of the project to analyze\n    analysis_type: Optional type of analysis to perform\n    \nReturns:\n    Dictionary with analysis results\n    \nRaises:\n    CapabilityInvocationError: If the requirements analysis fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "project_id",
              "analysis_type"
            ],
            "class": "TelosClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "refine_requirement",
            "line": 252,
            "async": true,
            "decorators": [],
            "docstring": "Refine a requirement based on feedback.\n\nArgs:\n    requirement_id: ID of the requirement to refine\n    feedback: Optional feedback to incorporate\n    \nReturns:\n    Dictionary with the refined requirement\n    \nRaises:\n    CapabilityInvocationError: If the requirement refinement fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "requirement_id",
              "feedback"
            ],
            "class": "TelosClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "llm_analyze_requirement",
            "line": 286,
            "async": true,
            "decorators": [],
            "docstring": "Analyze a requirement using LLM capabilities.\n\nArgs:\n    requirement_text: The text of the requirement to analyze\n    context: Optional additional context about the project\n    model: Optional model to use for analysis\n    \nReturns:\n    Dictionary with analysis results\n    \nRaises:\n    CapabilityInvocationError: If the requirement analysis fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "requirement_text",
              "context",
              "model"
            ],
            "class": "TelosClient",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "llm_generate_traces",
            "line": 325,
            "async": true,
            "decorators": [],
            "docstring": "Generate traceability links between requirements and implementation artifacts.\n\nArgs:\n    requirements: The requirements text or representation\n    artifacts: The implementation artifacts text or representation\n    context: Optional additional context\n    model: Optional model to use for trace generation\n    \nReturns:\n    Dictionary with traceability results\n    \nRaises:\n    CapabilityInvocationError: If the trace generation fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "requirements",
              "artifacts",
              "context",
              "model"
            ],
            "class": "TelosClient",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "llm_initialize_project",
            "line": 369,
            "async": true,
            "decorators": [],
            "docstring": "Initialize a new requirements project with LLM-generated recommendations.\n\nArgs:\n    project_name: Name of the project\n    project_description: Optional description of the project\n    project_domain: Optional domain/industry of the project\n    stakeholders: Optional key stakeholders information\n    constraints: Optional project constraints\n    model: Optional model to use for initialization\n    \nReturns:\n    Dictionary with project initialization recommendations\n    \nRaises:\n    CapabilityInvocationError: If the project initialization fails\n    ComponentUnavailableError: If the Telos component is unavailable",
            "args": [
              "self",
              "project_name",
              "project_description",
              "project_domain",
              "stakeholders",
              "constraints",
              "model"
            ],
            "class": "TelosClient",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "__init__",
            "line": 427,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the Telos UI client.\n\nArgs:\n    component_id: ID of the Telos UI component to connect to (default: \"telos.ui\")\n    hermes_url: URL of the Hermes API\n    security_context: Security context for authentication/authorization\n    retry_policy: Policy for retrying capability invocations",
            "args": [
              "self",
              "component_id",
              "hermes_url",
              "security_context",
              "retry_policy"
            ],
            "class": "TelosUIClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "interactive_refine",
            "line": 450,
            "async": true,
            "decorators": [],
            "docstring": "Start an interactive refinement session.\n\nArgs:\n    project_id: ID of the project\n    requirement_id: Optional ID of a specific requirement to refine\n    \nReturns:\n    Dictionary with session information\n    \nRaises:\n    CapabilityInvocationError: If the interactive refinement fails\n    ComponentUnavailableError: If the Telos UI component is unavailable",
            "args": [
              "self",
              "project_id",
              "requirement_id"
            ],
            "class": "TelosUIClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "visualize_project",
            "line": 484,
            "async": true,
            "decorators": [],
            "docstring": "Generate a visualization for a project.\n\nArgs:\n    project_id: ID of the project to visualize\n    visualization_type: Optional type of visualization\n    \nReturns:\n    Dictionary with visualization information\n    \nRaises:\n    CapabilityInvocationError: If the visualization fails\n    ComponentUnavailableError: If the Telos UI component is unavailable",
            "args": [
              "self",
              "project_id",
              "visualization_type"
            ],
            "class": "TelosUIClient",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_telos_client",
            "line": 519,
            "async": true,
            "decorators": [],
            "docstring": "Create a client for the Telos requirements management component.\n\nArgs:\n    component_id: ID of the Telos component to connect to (default: \"telos.requirements\")\n    hermes_url: URL of the Hermes API\n    security_context: Security context for authentication/authorization\n    retry_policy: Policy for retrying capability invocations\n    \nReturns:\n    TelosClient instance\n    \nRaises:\n    ComponentNotFoundError: If the Telos component is not found\n    ComponentUnavailableError: If the Hermes API is unavailable",
            "args": [
              "component_id",
              "hermes_url",
              "security_context",
              "retry_policy"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_telos_ui_client",
            "line": 560,
            "async": true,
            "decorators": [],
            "docstring": "Create a client for the Telos UI component.\n\nArgs:\n    component_id: ID of the Telos UI component to connect to (default: \"telos.ui\")\n    hermes_url: URL of the Hermes API\n    security_context: Security context for authentication/authorization\n    retry_policy: Policy for retrying capability invocations\n    \nReturns:\n    TelosUIClient instance\n    \nRaises:\n    ComponentNotFoundError: If the Telos UI component is not found\n    ComponentUnavailableError: If the Hermes API is unavailable",
            "args": [
              "component_id",
              "hermes_url",
              "security_context",
              "retry_policy"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "TelosClient",
            "line": 41,
            "methods": [
              "__init__"
            ],
            "decorators": [],
            "docstring": "Client for the Telos requirements management component.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TelosUIClient",
            "line": 424,
            "methods": [
              "__init__"
            ],
            "decorators": [],
            "docstring": "Client for the Telos UI component.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 10
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 10
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 10
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 10
          },
          {
            "module": "typing.Union",
            "from": "typing",
            "name": "Union",
            "alias": null,
            "line": 10
          },
          {
            "module": "tekton.utils.component_client.ComponentClient",
            "from": "tekton.utils.component_client",
            "name": "ComponentClient",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton.utils.component_client.ComponentError",
            "from": "tekton.utils.component_client",
            "name": "ComponentError",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton.utils.component_client.ComponentNotFoundError",
            "from": "tekton.utils.component_client",
            "name": "ComponentNotFoundError",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton.utils.component_client.CapabilityNotFoundError",
            "from": "tekton.utils.component_client",
            "name": "CapabilityNotFoundError",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton.utils.component_client.CapabilityInvocationError",
            "from": "tekton.utils.component_client",
            "name": "CapabilityInvocationError",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton.utils.component_client.ComponentUnavailableError",
            "from": "tekton.utils.component_client",
            "name": "ComponentUnavailableError",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton.utils.component_client.SecurityContext",
            "from": "tekton.utils.component_client",
            "name": "SecurityContext",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton.utils.component_client.RetryPolicy",
            "from": "tekton.utils.component_client",
            "name": "RetryPolicy",
            "alias": null,
            "line": 14
          },
          {
            "module": "utils.component_client.ComponentClient",
            "from": "utils.component_client",
            "name": "ComponentClient",
            "alias": null,
            "line": 26
          },
          {
            "module": "utils.component_client.ComponentError",
            "from": "utils.component_client",
            "name": "ComponentError",
            "alias": null,
            "line": 26
          },
          {
            "module": "utils.component_client.ComponentNotFoundError",
            "from": "utils.component_client",
            "name": "ComponentNotFoundError",
            "alias": null,
            "line": 26
          },
          {
            "module": "utils.component_client.CapabilityNotFoundError",
            "from": "utils.component_client",
            "name": "CapabilityNotFoundError",
            "alias": null,
            "line": 26
          },
          {
            "module": "utils.component_client.CapabilityInvocationError",
            "from": "utils.component_client",
            "name": "CapabilityInvocationError",
            "alias": null,
            "line": 26
          },
          {
            "module": "utils.component_client.ComponentUnavailableError",
            "from": "utils.component_client",
            "name": "ComponentUnavailableError",
            "alias": null,
            "line": 26
          },
          {
            "module": "utils.component_client.SecurityContext",
            "from": "utils.component_client",
            "name": "SecurityContext",
            "alias": null,
            "line": 26
          },
          {
            "module": "utils.component_client.RetryPolicy",
            "from": "utils.component_client",
            "name": "RetryPolicy",
            "alias": null,
            "line": 26
          },
          {
            "module": "tekton.utils.component_client.discover_component",
            "from": "tekton.utils.component_client",
            "name": "discover_component",
            "alias": null,
            "line": 543
          },
          {
            "module": "utils.component_client.discover_component",
            "from": "utils.component_client",
            "name": "discover_component",
            "alias": null,
            "line": 546
          },
          {
            "module": "tekton.utils.component_client.discover_component",
            "from": "tekton.utils.component_client",
            "name": "discover_component",
            "alias": null,
            "line": 584
          },
          {
            "module": "utils.component_client.discover_component",
            "from": "utils.component_client",
            "name": "discover_component",
            "alias": null,
            "line": 587
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "TelosClient",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 41,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "TelosClient.create_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 67,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.create_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 106,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.get_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 158,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.get_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 184,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.analyze_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 218,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.refine_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 252,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.llm_analyze_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 286,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.llm_generate_traces",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 325,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosClient.llm_initialize_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 369,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "class_definition",
            "name": "TelosUIClient",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 424,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "TelosUIClient.interactive_refine",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 450,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosUIClient.visualize_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 484,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "get_telos_client",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 519,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "get_telos_ui_client",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/client.py",
            "line": 560,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 598,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/__init__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [],
        "patterns": [],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 6,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the connector.\n\nArgs:\n    requirements_manager: The requirements manager instance",
            "args": [
              "self",
              "requirements_manager"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "initialize",
            "line": 47,
            "async": true,
            "decorators": [],
            "docstring": "Initialize the connector and planning engine.\n\nReturns:\n    Success status",
            "args": [
              "self"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "prepare_requirements_for_planning",
            "line": 64,
            "async": true,
            "decorators": [],
            "docstring": "Process requirements to determine planning readiness.\n\nArgs:\n    project_id: Project ID\n    \nReturns:\n    Analysis results",
            "args": [
              "self",
              "project_id"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "create_plan",
            "line": 109,
            "async": true,
            "decorators": [],
            "docstring": "Create a plan for a project using Prometheus.\n\nArgs:\n    project_id: Project ID\n    \nReturns:\n    Plan results",
            "args": [
              "self",
              "project_id"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "request_clarification",
            "line": 157,
            "async": true,
            "decorators": [],
            "docstring": "Request clarification from the user about a requirement.\n\nArgs:\n    project_id: Project ID\n    requirement_id: Requirement ID\n    question: Question to ask\n    \nReturns:\n    Query status",
            "args": [
              "self",
              "project_id",
              "requirement_id",
              "question"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_pending_queries",
            "line": 195,
            "async": false,
            "decorators": [],
            "docstring": "Get all pending clarification queries.\n\nReturns:\n    List of pending queries",
            "args": [
              "self"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "answer_clarification",
            "line": 204,
            "async": true,
            "decorators": [],
            "docstring": "Provide an answer to a clarification query.\n\nArgs:\n    query_id: Query ID\n    answer: User's answer\n    \nReturns:\n    Update status",
            "args": [
              "self",
              "query_id",
              "answer"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_compile_objective",
            "line": 257,
            "async": false,
            "decorators": [],
            "docstring": "Compile project requirements into a planning objective.\n\nArgs:\n    project: Project object\n    \nReturns:\n    Objective statement",
            "args": [
              "self",
              "project"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_prepare_planning_context",
            "line": 287,
            "async": false,
            "decorators": [],
            "docstring": "Prepare detailed context from requirements for planning.\n\nArgs:\n    project: Project object\n    \nReturns:\n    Context dictionary for planning",
            "args": [
              "self",
              "project"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_store_plan_in_project",
            "line": 348,
            "async": false,
            "decorators": [],
            "docstring": "Store a generated plan in the project metadata.\n\nArgs:\n    project: Project object\n    plan: Plan data\n    objective: Planning objective",
            "args": [
              "self",
              "project",
              "plan",
              "objective"
            ],
            "class": "TelosPrometheusConnector",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "create_plan_cmd",
            "line": 383,
            "async": true,
            "decorators": [],
            "docstring": "Create a plan for a project using the Prometheus connector.\n\nArgs:\n    requirements_manager: Requirements manager instance\n    project_id: Project ID",
            "args": [
              "requirements_manager",
              "project_id"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "TelosPrometheusConnector",
            "line": 19,
            "methods": [
              "__init__",
              "get_pending_queries",
              "_compile_objective",
              "_prepare_planning_context",
              "_store_plan_in_project"
            ],
            "decorators": [],
            "docstring": "Bridge between Telos requirements and Prometheus planning.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Tuple",
            "from": "typing",
            "name": "Tuple",
            "alias": null,
            "line": 12
          },
          {
            "module": "telos.core.requirements.RequirementsManager",
            "from": "telos.core.requirements",
            "name": "RequirementsManager",
            "alias": null,
            "line": 14
          },
          {
            "module": "telos.core.requirements.Requirement",
            "from": "telos.core.requirements",
            "name": "Requirement",
            "alias": null,
            "line": 14
          },
          {
            "module": "telos.core.requirements.Project",
            "from": "telos.core.requirements",
            "name": "Project",
            "alias": null,
            "line": 14
          },
          {
            "module": "prometheus.core.planning_engine.PlanningEngine",
            "from": "prometheus.core.planning_engine",
            "name": "PlanningEngine",
            "alias": null,
            "line": 35
          },
          {
            "module": "tekton.utils.port_config.get_prometheus_url",
            "from": "tekton.utils.port_config",
            "name": "get_prometheus_url",
            "alias": null,
            "line": 36
          },
          {
            "module": "telos.ui.interactive_refine.analyze_requirements_for_planning",
            "from": "telos.ui.interactive_refine",
            "name": "analyze_requirements_for_planning",
            "alias": null,
            "line": 81
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "TelosPrometheusConnector",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 19,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "TelosPrometheusConnector.initialize",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 47,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosPrometheusConnector.prepare_requirements_for_planning",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 64,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosPrometheusConnector.create_plan",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 109,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosPrometheusConnector.request_clarification",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 157,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosPrometheusConnector.get_pending_queries",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 195,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosPrometheusConnector.answer_clarification",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 204,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "create_plan_cmd",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/prometheus_connector.py",
            "line": 383,
            "priority": "high",
            "reason": "Async function, High complexity"
          }
        ]
      },
      "line_count": 467,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/__main__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 2
          },
          {
            "module": "sys",
            "alias": null,
            "line": 3
          },
          {
            "module": "shared.utils.socket_server.run_component_server",
            "from": "shared.utils.socket_server",
            "name": "run_component_server",
            "alias": null,
            "line": 10
          },
          {
            "module": "shared.utils.global_config.GlobalConfig",
            "from": "shared.utils.global_config",
            "name": "GlobalConfig",
            "alias": null,
            "line": 11
          }
        ],
        "patterns": [
          {
            "type": "singleton",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 23,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/client_usage.py",
      "analysis": {
        "functions": [
          {
            "name": "project_management_example",
            "line": 34,
            "async": true,
            "decorators": [],
            "docstring": "Example of using the Telos client for project management.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "requirements_analysis_example",
            "line": 119,
            "async": true,
            "decorators": [],
            "docstring": "Example of using the Telos client for requirements analysis.",
            "args": [],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "requirement_refinement_example",
            "line": 202,
            "async": true,
            "decorators": [],
            "docstring": "Example of using the Telos client for requirement refinement.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "telos_ui_example",
            "line": 253,
            "async": true,
            "decorators": [],
            "docstring": "Example of using the Telos UI client.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "error_handling_example",
            "line": 306,
            "async": true,
            "decorators": [],
            "docstring": "Example of handling errors with the Telos client.",
            "args": [],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "main",
            "line": 339,
            "async": true,
            "decorators": [],
            "docstring": "Run all examples.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.client.TelosClient",
            "from": "telos.client",
            "name": "TelosClient",
            "alias": null,
            "line": 22
          },
          {
            "module": "telos.client.TelosUIClient",
            "from": "telos.client",
            "name": "TelosUIClient",
            "alias": null,
            "line": 22
          },
          {
            "module": "telos.client.get_telos_client",
            "from": "telos.client",
            "name": "get_telos_client",
            "alias": null,
            "line": 22
          },
          {
            "module": "telos.client.get_telos_ui_client",
            "from": "telos.client",
            "name": "get_telos_ui_client",
            "alias": null,
            "line": 22
          },
          {
            "module": "sys",
            "alias": null,
            "line": 24
          },
          {
            "module": "os",
            "alias": null,
            "line": 25
          },
          {
            "module": "telos.client.TelosClient",
            "from": "telos.client",
            "name": "TelosClient",
            "alias": null,
            "line": 31
          },
          {
            "module": "telos.client.TelosUIClient",
            "from": "telos.client",
            "name": "TelosUIClient",
            "alias": null,
            "line": 31
          },
          {
            "module": "telos.client.get_telos_client",
            "from": "telos.client",
            "name": "get_telos_client",
            "alias": null,
            "line": 31
          },
          {
            "module": "telos.client.get_telos_ui_client",
            "from": "telos.client",
            "name": "get_telos_ui_client",
            "alias": null,
            "line": 31
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "project_management_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/client_usage.py",
            "line": 34,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "requirements_analysis_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/client_usage.py",
            "line": 119,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "requirement_refinement_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/client_usage.py",
            "line": 202,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "telos_ui_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/client_usage.py",
            "line": 253,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "error_handling_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/client_usage.py",
            "line": 306,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "main",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/client_usage.py",
            "line": 339,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 353,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/llm_integration_example.py",
      "analysis": {
        "functions": [
          {
            "name": "analyze_requirement_example",
            "line": 27,
            "async": true,
            "decorators": [],
            "docstring": "Example of using LLM to analyze a requirement.",
            "args": [],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "generate_traces_example",
            "line": 74,
            "async": true,
            "decorators": [],
            "docstring": "Example of using LLM to generate traceability links.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "initialize_project_example",
            "line": 126,
            "async": true,
            "decorators": [],
            "docstring": "Example of using LLM to initialize a new requirements project.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "main",
            "line": 168,
            "async": true,
            "decorators": [],
            "docstring": "Run the examples.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.client.TelosClient",
            "from": "telos.client",
            "name": "TelosClient",
            "alias": null,
            "line": 18
          },
          {
            "module": "telos.client.get_telos_client",
            "from": "telos.client",
            "name": "get_telos_client",
            "alias": null,
            "line": 18
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "analyze_requirement_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/llm_integration_example.py",
            "line": 27,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "generate_traces_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/llm_integration_example.py",
            "line": 74,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "initialize_project_example",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/llm_integration_example.py",
            "line": 126,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "main",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/examples/llm_integration_example.py",
            "line": 168,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 183,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/interactive_refine.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the interactive refiner.\n\nArgs:\n    requirements_manager: The requirements manager instance",
            "args": [
              "self",
              "requirements_manager"
            ],
            "class": "InteractiveRefiner",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "refine_requirement",
            "line": 36,
            "async": true,
            "decorators": [],
            "docstring": "Start an interactive refinement session for a requirement.\n\nArgs:\n    project_id: The project ID\n    requirement_id: Optional requirement ID (if None, create a new requirement)\n    \nReturns:\n    Result of the refinement process",
            "args": [
              "self",
              "project_id",
              "requirement_id"
            ],
            "class": "InteractiveRefiner",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "_process_refinement_choice",
            "line": 120,
            "async": true,
            "decorators": [],
            "docstring": "Process user's choice for requirement refinement.\n\nArgs:\n    project_id: The project ID\n    requirement_id: The requirement ID\n    requirement: The current requirement object\n    analysis: The requirement analysis results\n    \nReturns:\n    True if refinement is complete, False to continue refining",
            "args": [
              "self",
              "project_id",
              "requirement_id",
              "requirement",
              "analysis"
            ],
            "class": "InteractiveRefiner",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "_update_refinement_history",
            "line": 202,
            "async": true,
            "decorators": [],
            "docstring": "Update the refinement history for a requirement.\n\nArgs:\n    project_id: The project ID\n    requirement_id: The requirement ID\n    requirement: The requirement object\n    initial_analysis: The initial analysis results\n    final_analysis: The final analysis results",
            "args": [
              "self",
              "project_id",
              "requirement_id",
              "requirement",
              "initial_analysis",
              "final_analysis"
            ],
            "class": "InteractiveRefiner",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "analyze_requirements_for_planning",
            "line": 235,
            "async": true,
            "decorators": [],
            "docstring": "Analyze all requirements in a project to determine readiness for planning.\n\nArgs:\n    requirements_manager: Requirements manager instance\n    project_id: The project ID\n    \nReturns:\n    Analysis results for planning readiness",
            "args": [
              "requirements_manager",
              "project_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "refine_requirement_cmd",
            "line": 297,
            "async": false,
            "decorators": [],
            "docstring": "CLI command to refine a requirement interactively.\n\nArgs:\n    requirements_manager: Requirements manager instance\n    project_id: The project ID\n    requirement_id: Optional requirement ID",
            "args": [
              "requirements_manager",
              "project_id",
              "requirement_id"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "analyze_for_planning_cmd",
            "line": 322,
            "async": false,
            "decorators": [],
            "docstring": "CLI command to analyze requirements for planning readiness.\n\nArgs:\n    requirements_manager: Requirements manager instance\n    project_id: The project ID",
            "args": [
              "requirements_manager",
              "project_id"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "InteractiveRefiner",
            "line": 23,
            "methods": [
              "__init__"
            ],
            "decorators": [],
            "docstring": "Interactive CLI-based requirement refinement.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 12
          },
          {
            "module": "telos.core.requirements.RequirementsManager",
            "from": "telos.core.requirements",
            "name": "RequirementsManager",
            "alias": null,
            "line": 14
          },
          {
            "module": "telos.core.requirement.Requirement",
            "from": "telos.core.requirement",
            "name": "Requirement",
            "alias": null,
            "line": 15
          },
          {
            "module": "analyzers.RequirementAnalyzer",
            "from": "analyzers",
            "name": "RequirementAnalyzer",
            "alias": null,
            "line": 20
          },
          {
            "module": "formatters.format_detailed_feedback",
            "from": "formatters",
            "name": "format_detailed_feedback",
            "alias": null,
            "line": 21
          },
          {
            "module": "formatters.display_requirement",
            "from": "formatters",
            "name": "display_requirement",
            "alias": null,
            "line": 21
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "InteractiveRefiner",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/interactive_refine.py",
            "line": 23,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "InteractiveRefiner.refine_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/interactive_refine.py",
            "line": 36,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "InteractiveRefiner._process_refinement_choice",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/interactive_refine.py",
            "line": 120,
            "priority": "medium",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "analyze_requirements_for_planning",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/interactive_refine.py",
            "line": 235,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "refine_requirement_cmd",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/interactive_refine.py",
            "line": 297,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "analyze_for_planning_cmd",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/interactive_refine.py",
            "line": 322,
            "priority": "high",
            "reason": "High complexity"
          }
        ]
      },
      "line_count": 355,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
      "analysis": {
        "functions": [
          {
            "name": "create_project",
            "line": 20,
            "async": false,
            "decorators": [],
            "docstring": "Create a project.\n\nArgs:\n    requirements_manager: Requirements manager\n    name: Project name\n    description: Project description",
            "args": [
              "requirements_manager",
              "name",
              "description"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "list_projects",
            "line": 32,
            "async": false,
            "decorators": [],
            "docstring": "List all projects.\n\nArgs:\n    requirements_manager: Requirements manager",
            "args": [
              "requirements_manager"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "show_project",
            "line": 50,
            "async": false,
            "decorators": [],
            "docstring": "Show project details.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID",
            "args": [
              "requirements_manager",
              "project_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "delete_project",
            "line": 77,
            "async": false,
            "decorators": [],
            "docstring": "Delete a project.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID",
            "args": [
              "requirements_manager",
              "project_id"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "add_requirement",
            "line": 93,
            "async": false,
            "decorators": [],
            "docstring": "Add a requirement to a project.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID\n    title: Requirement title\n    description: Requirement description\n    requirement_type: Requirement type\n    priority: Priority level\n    tags: Comma-separated tags\n    parent_id: Parent requirement ID\n    interactive: Whether to start interactive refinement after adding",
            "args": [
              "requirements_manager",
              "project_id",
              "title",
              "description",
              "requirement_type",
              "priority",
              "tags",
              "parent_id",
              "interactive"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "list_requirements",
            "line": 142,
            "async": false,
            "decorators": [],
            "docstring": "List requirements in a project.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID\n    status: Filter by status\n    requirement_type: Filter by type\n    priority: Filter by priority\n    tag: Filter by tag",
            "args": [
              "requirements_manager",
              "project_id",
              "status",
              "requirement_type",
              "priority",
              "tag"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "show_requirement",
            "line": 194,
            "async": false,
            "decorators": [],
            "docstring": "Show requirement details.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID\n    requirement_id: Requirement ID",
            "args": [
              "requirements_manager",
              "project_id",
              "requirement_id"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "update_requirement",
            "line": 236,
            "async": false,
            "decorators": [],
            "docstring": "Update a requirement.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID\n    requirement_id: Requirement ID\n    **kwargs: Attributes to update",
            "args": [
              "requirements_manager",
              "project_id",
              "requirement_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "delete_requirement",
            "line": 273,
            "async": false,
            "decorators": [],
            "docstring": "Delete a requirement.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID\n    requirement_id: Requirement ID",
            "args": [
              "requirements_manager",
              "project_id",
              "requirement_id"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "visualize_requirements",
            "line": 299,
            "async": false,
            "decorators": [],
            "docstring": "Visualize requirements.\n\nArgs:\n    requirements_manager: Requirements manager\n    project_id: Project ID\n    format: Visualization format\n    output: Output file",
            "args": [
              "requirements_manager",
              "project_id",
              "format",
              "output"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "register_with_hermes",
            "line": 328,
            "async": true,
            "decorators": [],
            "docstring": "Register with the Hermes service registry.\n\nArgs:\n    requirements_manager: Requirements manager",
            "args": [
              "requirements_manager"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Callable",
            "from": "typing",
            "name": "Callable",
            "alias": null,
            "line": 8
          },
          {
            "module": "telos.core.requirements.RequirementsManager",
            "from": "telos.core.requirements",
            "name": "RequirementsManager",
            "alias": null,
            "line": 10
          },
          {
            "module": "telos.core.requirements.Requirement",
            "from": "telos.core.requirements",
            "name": "Requirement",
            "alias": null,
            "line": 10
          },
          {
            "module": "telos.core.requirements.Project",
            "from": "telos.core.requirements",
            "name": "Project",
            "alias": null,
            "line": 10
          },
          {
            "module": "telos.ui.cli_helpers.format_timestamp",
            "from": "telos.ui.cli_helpers",
            "name": "format_timestamp",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.ui.cli_helpers.get_status_symbol",
            "from": "telos.ui.cli_helpers",
            "name": "get_status_symbol",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.ui.cli_helpers.get_priority_symbol",
            "from": "telos.ui.cli_helpers",
            "name": "get_priority_symbol",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.ui.cli_helpers.visualize_hierarchy",
            "from": "telos.ui.cli_helpers",
            "name": "visualize_hierarchy",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.ui.cli_helpers.visualize_graph",
            "from": "telos.ui.cli_helpers",
            "name": "visualize_graph",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.ui.interactive_refine.refine_requirement_cmd",
            "from": "telos.ui.interactive_refine",
            "name": "refine_requirement_cmd",
            "alias": null,
            "line": 136
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "create_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 20,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "list_projects",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 32,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "show_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 50,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "delete_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 77,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "add_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 93,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "list_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 142,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "show_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 194,
            "priority": "high",
            "reason": "High complexity"
          },
          {
            "type": "function",
            "name": "update_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 236,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "delete_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 273,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "visualize_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 299,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "register_with_hermes",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_commands.py",
            "line": 328,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 342,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/analyzers.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 23,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the requirement analyzer.\n\nArgs:\n    use_llm: Whether to use LLM-powered analysis through Rhetor (if available)",
            "args": [
              "self",
              "use_llm"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "analyze_requirement",
            "line": 79,
            "async": true,
            "decorators": [],
            "docstring": "Analyze a requirement's quality and provide improvement suggestions.\nUses Rhetor LLM capabilities when available, falling back to rule-based analysis.\n\nArgs:\n    requirement: The requirement to analyze\n    \nReturns:\n    Analysis results including quality score and suggestions",
            "args": [
              "self",
              "requirement"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_analyze_with_llm",
            "line": 111,
            "async": true,
            "decorators": [],
            "docstring": "Analyze a requirement using LLM capabilities through Rhetor.\n\nArgs:\n    requirement: The requirement to analyze\n    \nReturns:\n    Analysis results or None if analysis failed",
            "args": [
              "self",
              "requirement"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_analyze_with_direct_llm",
            "line": 147,
            "async": true,
            "decorators": [],
            "docstring": "Analyze a requirement using the direct LLM client.\n\nArgs:\n    requirement: The requirement to analyze\n    \nReturns:\n    Analysis results",
            "args": [
              "self",
              "requirement"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_analyze_with_rhetor",
            "line": 233,
            "async": true,
            "decorators": [],
            "docstring": "Analyze a requirement using the Rhetor prompt client.\n\nArgs:\n    requirement: The requirement to analyze\n    \nReturns:\n    Analysis results",
            "args": [
              "self",
              "requirement"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_analyze_with_rules",
            "line": 283,
            "async": true,
            "decorators": [],
            "docstring": "Analyze a requirement's quality using rule-based analysis.\n\nArgs:\n    requirement: The requirement to analyze\n    \nReturns:\n    Analysis results",
            "args": [
              "self",
              "requirement"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_initialize_metrics",
            "line": 330,
            "async": true,
            "decorators": [],
            "docstring": "Initialize quality metrics for each criterion.",
            "args": [
              "self"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_analyze_title",
            "line": 341,
            "async": true,
            "decorators": [],
            "docstring": "Analyze the requirement title.",
            "args": [
              "self",
              "requirement",
              "metrics"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_analyze_description",
            "line": 357,
            "async": true,
            "decorators": [],
            "docstring": "Analyze the requirement description.",
            "args": [
              "self",
              "requirement",
              "metrics"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_analyze_testability",
            "line": 395,
            "async": true,
            "decorators": [],
            "docstring": "Analyze the requirement testability.",
            "args": [
              "self",
              "requirement",
              "metrics"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_analyze_feasibility",
            "line": 409,
            "async": true,
            "decorators": [],
            "docstring": "Analyze the requirement feasibility.",
            "args": [
              "self",
              "requirement",
              "metrics"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_analyze_metadata",
            "line": 427,
            "async": true,
            "decorators": [],
            "docstring": "Analyze requirement metadata (priority, tags, etc.).",
            "args": [
              "self",
              "requirement",
              "metrics"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_calculate_overall_score",
            "line": 441,
            "async": true,
            "decorators": [],
            "docstring": "Calculate the overall quality score as a weighted average.",
            "args": [
              "self",
              "metrics"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_compile_suggestions",
            "line": 449,
            "async": true,
            "decorators": [],
            "docstring": "Compile improvement suggestions and areas from metrics.",
            "args": [
              "self",
              "requirement",
              "metrics"
            ],
            "class": "RequirementAnalyzer",
            "complexity": "medium",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "RequirementAnalyzer",
            "line": 20,
            "methods": [
              "__init__"
            ],
            "decorators": [],
            "docstring": "Analyzes requirements and provides improvement suggestions.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Union",
            "from": "typing",
            "name": "Union",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.core.requirement.Requirement",
            "from": "telos.core.requirement",
            "name": "Requirement",
            "alias": null,
            "line": 15
          },
          {
            "module": "formatters.format_detailed_feedback",
            "from": "formatters",
            "name": "format_detailed_feedback",
            "alias": null,
            "line": 96
          },
          {
            "module": "rhetor.core.llm_client.LLMClient",
            "from": "rhetor.core.llm_client",
            "name": "LLMClient",
            "alias": null,
            "line": 125
          },
          {
            "module": "rhetor.client.get_rhetor_prompt_client",
            "from": "rhetor.client",
            "name": "get_rhetor_prompt_client",
            "alias": null,
            "line": 136
          },
          {
            "module": "formatters.format_detailed_feedback",
            "from": "formatters",
            "name": "format_detailed_feedback",
            "alias": null,
            "line": 318
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "RequirementAnalyzer",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/analyzers.py",
            "line": 20,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "RequirementAnalyzer.analyze_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/analyzers.py",
            "line": 79,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 475,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/formatters.py",
      "analysis": {
        "functions": [
          {
            "name": "format_detailed_feedback",
            "line": 12,
            "async": false,
            "decorators": [],
            "docstring": "Format detailed feedback for display.\n\nArgs:\n    requirement: The requirement being analyzed\n    metrics: Quality metrics for different criteria\n    score: Overall quality score\n    suggestions: List of improvement suggestions\n    \nReturns:\n    Formatted feedback string",
            "args": [
              "requirement",
              "metrics",
              "score",
              "suggestions"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "display_requirement",
            "line": 55,
            "async": false,
            "decorators": [],
            "docstring": "Display requirement details in a formatted manner.\n\nArgs:\n    requirement: The requirement to display",
            "args": [
              "requirement"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          }
        ],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 8
          },
          {
            "module": "telos.core.requirement.Requirement",
            "from": "telos.core.requirement",
            "name": "Requirement",
            "alias": null,
            "line": 9
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "format_detailed_feedback",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/formatters.py",
            "line": 12,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "display_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/formatters.py",
            "line": 55,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 81,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/chat_interface.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 31,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the chat interface.\n\nArgs:\n    telos_script: Path to the Telos CLI script (default: find automatically)",
            "args": [
              "self",
              "telos_script"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_find_telos_script",
            "line": 76,
            "async": false,
            "decorators": [],
            "docstring": "Find the Telos CLI script in the environment.",
            "args": [
              "self"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "start",
            "line": 93,
            "async": false,
            "decorators": [],
            "docstring": "Start the chat interface.",
            "args": [
              "self"
            ],
            "class": "TelosChatInterface",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_process_input",
            "line": 120,
            "async": false,
            "decorators": [],
            "docstring": "Process user input and generate a response.\n\nArgs:\n    user_input: User's input text",
            "args": [
              "self",
              "user_input"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_parse_natural_language",
            "line": 145,
            "async": false,
            "decorators": [],
            "docstring": "Parse natural language input into a Telos command.\n\nArgs:\n    text: Natural language input\n    \nReturns:\n    Telos CLI command or None if no match",
            "args": [
              "self",
              "text"
            ],
            "class": "TelosChatInterface",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_execute_telos_command",
            "line": 174,
            "async": false,
            "decorators": [],
            "docstring": "Execute a Telos CLI command.\n\nArgs:\n    command: Telos CLI command\n    \nReturns:\n    Command output",
            "args": [
              "self",
              "command"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_format_and_display_response",
            "line": 215,
            "async": false,
            "decorators": [],
            "docstring": "Format and display the command response.\n\nArgs:\n    output: Command output\n    command: The command that was executed",
            "args": [
              "self",
              "output",
              "command"
            ],
            "class": "TelosChatInterface",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_update_context_from_command",
            "line": 255,
            "async": false,
            "decorators": [],
            "docstring": "Update session context based on command execution.\n\nArgs:\n    command: The executed command\n    output: Command output",
            "args": [
              "self",
              "command",
              "output"
            ],
            "class": "TelosChatInterface",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "_handle_add_requirement",
            "line": 286,
            "async": false,
            "decorators": [],
            "docstring": "Handle the add requirement command with interactive mode.\n\nArgs:\n    project_id: Project ID\n    title: Optional requirement title\n    \nReturns:\n    Formatted command",
            "args": [
              "self",
              "project_id",
              "title"
            ],
            "class": "TelosChatInterface",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_set_current_project",
            "line": 315,
            "async": false,
            "decorators": [],
            "docstring": "Set the current project in the session context.\n\nArgs:\n    project_id: Project ID\n    \nReturns:\n    None (response message is printed directly)",
            "args": [
              "self",
              "project_id"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_show_current_context",
            "line": 329,
            "async": false,
            "decorators": [],
            "docstring": "Show the current session context.\n\nReturns:\n    None (response message is printed directly)",
            "args": [
              "self"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_show_help",
            "line": 346,
            "async": false,
            "decorators": [],
            "docstring": "Show help information.\n\nReturns:\n    None (response message is printed directly)",
            "args": [
              "self"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_handle_general_query",
            "line": 376,
            "async": false,
            "decorators": [],
            "docstring": "Handle general queries that don't match command patterns.\n\nArgs:\n    query: User's query\n    \nReturns:\n    Response text",
            "args": [
              "self",
              "query"
            ],
            "class": "TelosChatInterface",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_print_welcome",
            "line": 400,
            "async": false,
            "decorators": [],
            "docstring": "Print welcome message.",
            "args": [
              "self"
            ],
            "class": "TelosChatInterface",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "main",
            "line": 410,
            "async": false,
            "decorators": [],
            "docstring": "Run the Telos chat interface.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "TelosChatInterface",
            "line": 23,
            "methods": [
              "__init__",
              "_find_telos_script",
              "start",
              "_process_input",
              "_parse_natural_language",
              "_execute_telos_command",
              "_format_and_display_response",
              "_update_context_from_command",
              "_handle_add_requirement",
              "_set_current_project",
              "_show_current_context",
              "_show_help",
              "_handle_general_query",
              "_print_welcome"
            ],
            "decorators": [],
            "docstring": "Chat-based interface for Telos that wraps CLI commands.\n\nThis provides a simple conversational interface while using the existing\nCLI commands underneath.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "re",
            "alias": null,
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "time",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 15
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 16
          },
          {
            "module": "shlex",
            "alias": null,
            "line": 17
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 18
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 18
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 18
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 18
          },
          {
            "module": "typing.Callable",
            "from": "typing",
            "name": "Callable",
            "alias": null,
            "line": 18
          },
          {
            "module": "typing.Tuple",
            "from": "typing",
            "name": "Tuple",
            "alias": null,
            "line": 18
          }
        ],
        "patterns": [
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "TelosChatInterface",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/chat_interface.py",
            "line": 23,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "TelosChatInterface.start",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/chat_interface.py",
            "line": 93,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosChatInterface._update_context_from_command",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/chat_interface.py",
            "line": 255,
            "priority": "medium",
            "reason": "High complexity"
          },
          {
            "type": "function",
            "name": "main",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/chat_interface.py",
            "line": 410,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 424,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/__init__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "telos.ui.cli.TelosCLI",
            "from": "telos.ui.cli",
            "name": "TelosCLI",
            "alias": null,
            "line": 6
          },
          {
            "module": "telos.ui.cli.main",
            "from": "telos.ui.cli",
            "name": "main",
            "alias": null,
            "line": 6
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 8,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_helpers.py",
      "analysis": {
        "functions": [
          {
            "name": "format_timestamp",
            "line": 11,
            "async": false,
            "decorators": [],
            "docstring": "Format a timestamp as a human-readable date.\n\nArgs:\n    timestamp: Unix timestamp\n    \nReturns:\n    Formatted date string",
            "args": [
              "timestamp"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_status_symbol",
            "line": 23,
            "async": false,
            "decorators": [],
            "docstring": "Get a symbol for a requirement status.\n\nArgs:\n    status: Requirement status\n    \nReturns:\n    Status symbol",
            "args": [
              "status"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_priority_symbol",
            "line": 42,
            "async": false,
            "decorators": [],
            "docstring": "Get a symbol for a requirement priority.\n\nArgs:\n    priority: Requirement priority\n    \nReturns:\n    Priority symbol",
            "args": [
              "priority"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "visualize_hierarchy",
            "line": 60,
            "async": false,
            "decorators": [],
            "docstring": "Visualize requirements as a hierarchy.\n\nArgs:\n    project: Project to visualize\n    output: Output file",
            "args": [
              "project",
              "output"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": true
          },
          {
            "name": "print_node",
            "line": 70,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "node_id",
              "level"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "visualize_graph",
            "line": 103,
            "async": false,
            "decorators": [],
            "docstring": "Visualize requirements as a graph.\n\nArgs:\n    project: Project to visualize\n    output: Output file",
            "args": [
              "project",
              "output"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          }
        ],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 94
          },
          {
            "module": "matplotlib.pyplot",
            "alias": "plt",
            "line": 114
          },
          {
            "module": "networkx",
            "alias": "nx",
            "line": 115
          }
        ],
        "patterns": [
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "format_timestamp",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_helpers.py",
            "line": 11,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "get_status_symbol",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_helpers.py",
            "line": 23,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "get_priority_symbol",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_helpers.py",
            "line": 42,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "visualize_hierarchy",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_helpers.py",
            "line": 60,
            "priority": "high",
            "reason": "Has side effects"
          },
          {
            "type": "function",
            "name": "print_node",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_helpers.py",
            "line": 70,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "visualize_graph",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_helpers.py",
            "line": 103,
            "priority": "high",
            "reason": "High complexity"
          }
        ]
      },
      "line_count": 181,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_parser.py",
      "analysis": {
        "functions": [
          {
            "name": "create_parser",
            "line": 10,
            "async": false,
            "decorators": [],
            "docstring": "Create the argument parser for the Telos CLI.\n\nReturns:\n    Argument parser",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "parse_args",
            "line": 120,
            "async": false,
            "decorators": [],
            "docstring": "Parse command-line arguments.\n\nArgs:\n    args: Command-line arguments\n    \nReturns:\n    Parsed arguments",
            "args": [
              "args"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "argparse",
            "alias": null,
            "line": 6
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 7
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "create_parser",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_parser.py",
            "line": 10,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "parse_args",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli_parser.py",
            "line": 120,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 130,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 36,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the CLI.\n\nArgs:\n    data_dir: Directory for storing data",
            "args": [
              "self",
              "data_dir"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "run",
            "line": 86,
            "async": false,
            "decorators": [],
            "docstring": "Run the CLI with the given arguments.\n\nArgs:\n    args: Command-line arguments",
            "args": [
              "self",
              "args"
            ],
            "class": "TelosCLI",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "create_project",
            "line": 140,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "list_projects",
            "line": 143,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "show_project",
            "line": 146,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "delete_project",
            "line": 149,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "add_requirement",
            "line": 152,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "list_requirements",
            "line": 155,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "show_requirement",
            "line": 158,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "update_requirement",
            "line": 161,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "delete_requirement",
            "line": 164,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "visualize_requirements",
            "line": 167,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "refine_requirement",
            "line": 170,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "analyze_for_planning",
            "line": 173,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "create_plan",
            "line": 176,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "register_with_hermes",
            "line": 181,
            "async": true,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosCLI",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "main",
            "line": 185,
            "async": false,
            "decorators": [],
            "docstring": "Run the CLI.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "TelosCLI",
            "line": 33,
            "methods": [
              "__init__",
              "run",
              "create_project",
              "list_projects",
              "show_project",
              "delete_project",
              "add_requirement",
              "list_requirements",
              "show_requirement",
              "update_requirement",
              "delete_requirement",
              "visualize_requirements",
              "refine_requirement",
              "analyze_for_planning",
              "create_plan"
            ],
            "decorators": [],
            "docstring": "Command-line interface for Telos.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Callable",
            "from": "typing",
            "name": "Callable",
            "alias": null,
            "line": 9
          },
          {
            "module": "telos.core.requirements.RequirementsManager",
            "from": "telos.core.requirements",
            "name": "RequirementsManager",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.ui.cli_parser.parse_args",
            "from": "telos.ui.cli_parser",
            "name": "parse_args",
            "alias": null,
            "line": 12
          },
          {
            "module": "telos.ui.cli_commands.create_project",
            "from": "telos.ui.cli_commands",
            "name": "create_project",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.list_projects",
            "from": "telos.ui.cli_commands",
            "name": "list_projects",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.show_project",
            "from": "telos.ui.cli_commands",
            "name": "show_project",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.delete_project",
            "from": "telos.ui.cli_commands",
            "name": "delete_project",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.add_requirement",
            "from": "telos.ui.cli_commands",
            "name": "add_requirement",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.list_requirements",
            "from": "telos.ui.cli_commands",
            "name": "list_requirements",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.show_requirement",
            "from": "telos.ui.cli_commands",
            "name": "show_requirement",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.update_requirement",
            "from": "telos.ui.cli_commands",
            "name": "update_requirement",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.delete_requirement",
            "from": "telos.ui.cli_commands",
            "name": "delete_requirement",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.visualize_requirements",
            "from": "telos.ui.cli_commands",
            "name": "visualize_requirements",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.cli_commands.register_with_hermes",
            "from": "telos.ui.cli_commands",
            "name": "register_with_hermes",
            "alias": null,
            "line": 13
          },
          {
            "module": "telos.ui.interactive_refine.refine_requirement_cmd",
            "from": "telos.ui.interactive_refine",
            "name": "refine_requirement_cmd",
            "alias": null,
            "line": 25
          },
          {
            "module": "telos.ui.interactive_refine.analyze_for_planning_cmd",
            "from": "telos.ui.interactive_refine",
            "name": "analyze_for_planning_cmd",
            "alias": null,
            "line": 25
          },
          {
            "module": "telos.ui.cli_parser.create_parser",
            "from": "telos.ui.cli_parser",
            "name": "create_parser",
            "alias": null,
            "line": 113
          },
          {
            "module": "telos.prometheus_connector.create_plan_cmd",
            "from": "telos.prometheus_connector",
            "name": "create_plan_cmd",
            "alias": null,
            "line": 178
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "TelosCLI",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 33,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "TelosCLI.run",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 86,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.create_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 140,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.list_projects",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 143,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.show_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 146,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.delete_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 149,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.add_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 152,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.list_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 155,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.show_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 158,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.update_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 161,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.delete_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 164,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.visualize_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 167,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.refine_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 170,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.analyze_for_planning",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 173,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.create_plan",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 176,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosCLI.register_with_hermes",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 181,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "main",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/ui/cli.py",
            "line": 185,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 192,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirement.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 17,
            "async": false,
            "decorators": [],
            "docstring": "Initialize a requirement.\n\nArgs:\n    title: Short title for the requirement\n    description: Detailed description\n    requirement_id: Unique identifier\n    requirement_type: Type of requirement (functional, non-functional, constraint, etc.)\n    priority: Priority level (low, medium, high, critical)\n    status: Current status (new, accepted, in-progress, completed, rejected)\n    created_by: ID or name of creator\n    created_at: Creation timestamp\n    updated_at: Last update timestamp\n    tags: Tags for categorization\n    parent_id: ID of parent requirement if this is a sub-requirement\n    dependencies: IDs of requirements this depends on\n    metadata: Additional metadata",
            "args": [
              "self",
              "title",
              "description",
              "requirement_id",
              "requirement_type",
              "priority",
              "status",
              "created_by",
              "created_at",
              "updated_at",
              "tags",
              "parent_id",
              "dependencies",
              "metadata"
            ],
            "class": "Requirement",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "update",
            "line": 68,
            "async": false,
            "decorators": [],
            "docstring": "Update requirement attributes.\n\nArgs:\n    **kwargs: Attributes to update",
            "args": [
              "self"
            ],
            "class": "Requirement",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_add_history_entry",
            "line": 85,
            "async": false,
            "decorators": [],
            "docstring": "Add an entry to the requirement history.\n\nArgs:\n    action: The action performed\n    description: Description of the change",
            "args": [
              "self",
              "action",
              "description"
            ],
            "class": "Requirement",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "to_dict",
            "line": 98,
            "async": false,
            "decorators": [],
            "docstring": "Convert the requirement to a dictionary.",
            "args": [
              "self"
            ],
            "class": "Requirement",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "from_dict",
            "line": 118,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Create a requirement from a dictionary.",
            "args": [
              "cls",
              "data"
            ],
            "class": "Requirement",
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "Requirement",
            "line": 14,
            "methods": [
              "__init__",
              "update",
              "_add_history_entry",
              "to_dict",
              "from_dict"
            ],
            "decorators": [],
            "docstring": "A user requirement or goal.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 8
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 9
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "Requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirement.py",
            "line": 14,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "Requirement.update",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirement.py",
            "line": 68,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Requirement.to_dict",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirement.py",
            "line": 98,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Requirement.from_dict",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirement.py",
            "line": 118,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 140,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/__init__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [],
        "patterns": [],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 4,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/telos_component.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "self"
            ],
            "class": "TelosComponent",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_component_specific_init",
            "line": 22,
            "async": true,
            "decorators": [],
            "docstring": "Initialize Telos-specific services.",
            "args": [
              "self"
            ],
            "class": "TelosComponent",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_component_specific_cleanup",
            "line": 44,
            "async": true,
            "decorators": [],
            "docstring": "Cleanup Telos-specific resources.",
            "args": [
              "self"
            ],
            "class": "TelosComponent",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "get_capabilities",
            "line": 62,
            "async": false,
            "decorators": [],
            "docstring": "Get component capabilities.",
            "args": [
              "self"
            ],
            "class": "TelosComponent",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_metadata",
            "line": 73,
            "async": false,
            "decorators": [],
            "docstring": "Get component metadata.",
            "args": [
              "self"
            ],
            "class": "TelosComponent",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_component_status",
            "line": 82,
            "async": false,
            "decorators": [],
            "docstring": "Get detailed component status.",
            "args": [
              "self"
            ],
            "class": "TelosComponent",
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "TelosComponent",
            "line": 13,
            "methods": [
              "__init__",
              "get_capabilities",
              "get_metadata",
              "get_component_status"
            ],
            "decorators": [],
            "docstring": "Telos requirements tracking and validation component.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "logging",
            "alias": null,
            "line": 2
          },
          {
            "module": "os",
            "alias": null,
            "line": 3
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 4
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 4
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 4
          },
          {
            "module": "shared.utils.standard_component.StandardComponentBase",
            "from": "shared.utils.standard_component",
            "name": "StandardComponentBase",
            "alias": null,
            "line": 6
          },
          {
            "module": "telos.core.requirements_manager.RequirementsManager",
            "from": "telos.core.requirements_manager",
            "name": "RequirementsManager",
            "alias": null,
            "line": 7
          },
          {
            "module": "telos.prometheus_connector.TelosPrometheusConnector",
            "from": "telos.prometheus_connector",
            "name": "TelosPrometheusConnector",
            "alias": null,
            "line": 8
          }
        ],
        "patterns": [
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          },
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "TelosComponent",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/telos_component.py",
            "line": 13,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "TelosComponent.get_capabilities",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/telos_component.py",
            "line": 62,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosComponent.get_metadata",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/telos_component.py",
            "line": 73,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "TelosComponent.get_component_status",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/telos_component.py",
            "line": 82,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 90,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "telos.core.requirement.Requirement",
            "from": "telos.core.requirement",
            "name": "Requirement",
            "alias": null,
            "line": 6
          },
          {
            "module": "telos.core.project.Project",
            "from": "telos.core.project",
            "name": "Project",
            "alias": null,
            "line": 7
          },
          {
            "module": "telos.core.requirements_manager.RequirementsManager",
            "from": "telos.core.requirements_manager",
            "name": "RequirementsManager",
            "alias": null,
            "line": 8
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 10,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 42,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the LLM Adapter client.\n\nArgs:\n    adapter_url: URL for the LLM adapter service",
            "args": [
              "self",
              "adapter_url"
            ],
            "class": "LLMAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_load_templates",
            "line": 86,
            "async": false,
            "decorators": [],
            "docstring": "Load prompt templates for Telos",
            "args": [
              "self"
            ],
            "class": "LLMAdapter",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "_register_core_templates",
            "line": 119,
            "async": false,
            "decorators": [],
            "docstring": "Register core prompt templates for Telos",
            "args": [
              "self"
            ],
            "class": "LLMAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_get_client",
            "line": 322,
            "async": true,
            "decorators": [],
            "docstring": "Get or initialize the LLM client\n\nReturns:\n    Initialized TektonLLMClient",
            "args": [
              "self"
            ],
            "class": "LLMAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "chat",
            "line": 337,
            "async": true,
            "decorators": [],
            "docstring": "Send a chat request to the LLM adapter.\n\nArgs:\n    messages: List of message dictionaries with 'role' and 'content'\n    model: LLM model to use (defaults to configured default)\n    temperature: Temperature parameter for generation\n    max_tokens: Maximum tokens to generate\n    stream: Whether to stream the response\n    system_prompt: Optional system prompt\n    \nReturns:\n    If stream=False, returns the complete response as a string\n    If stream=True, returns an async generator yielding response chunks",
            "args": [
              "self",
              "messages",
              "model",
              "temperature",
              "max_tokens",
              "stream",
              "system_prompt"
            ],
            "class": "LLMAdapter",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "_stream_chat",
            "line": 407,
            "async": true,
            "decorators": [],
            "docstring": "Stream a chat response from the LLM adapter.\n\nArgs:\n    prompt: The prompt to send\n    system_prompt: Optional system prompt\n    custom_settings: LLM settings to use\n    \nYields:\n    Response chunks as they arrive",
            "args": [
              "self",
              "prompt",
              "system_prompt",
              "custom_settings"
            ],
            "class": "LLMAdapter",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "generate_stream",
            "line": 427,
            "async": true,
            "decorators": [],
            "docstring": null,
            "args": [],
            "class": "LLMAdapter",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "error_generator",
            "line": 453,
            "async": true,
            "decorators": [],
            "docstring": null,
            "args": [],
            "class": "LLMAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "analyze_requirement",
            "line": 457,
            "async": true,
            "decorators": [],
            "docstring": "Analyze a requirement using the LLM adapter to evaluate quality and suggest improvements.\n\nArgs:\n    requirement: The requirement dictionary with id, title, description, etc.\n    context: Optional additional context about the project\n    model: LLM model to use (defaults to configured default)\n    \nReturns:\n    Dictionary with analysis results",
            "args": [
              "self",
              "requirement",
              "context",
              "model"
            ],
            "class": "LLMAdapter",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "refine_requirement",
            "line": 536,
            "async": true,
            "decorators": [],
            "docstring": "Refine a requirement based on feedback using the LLM adapter.\n\nArgs:\n    requirement: The requirement dictionary with id, title, description, etc.\n    feedback: User feedback to incorporate into the refinement\n    model: LLM model to use (defaults to configured default)\n    \nReturns:\n    Dictionary with refined requirement",
            "args": [
              "self",
              "requirement",
              "feedback",
              "model"
            ],
            "class": "LLMAdapter",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "validate_requirements",
            "line": 615,
            "async": true,
            "decorators": [],
            "docstring": "Validate a set of requirements against specified criteria using the LLM adapter.\n\nArgs:\n    requirements: List of requirement dictionaries\n    validation_criteria: List of validation criteria to check against\n    model: LLM model to use (defaults to configured default)\n    \nReturns:\n    Dictionary with validation results",
            "args": [
              "self",
              "requirements",
              "validation_criteria",
              "model"
            ],
            "class": "LLMAdapter",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "detect_conflicts",
            "line": 712,
            "async": true,
            "decorators": [],
            "docstring": "Detect conflicts between requirements using the LLM adapter.\n\nArgs:\n    requirements: List of requirement dictionaries\n    model: LLM model to use (defaults to configured default)\n    \nReturns:\n    Dictionary with conflict analysis results",
            "args": [
              "self",
              "requirements",
              "model"
            ],
            "class": "LLMAdapter",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "generate_acceptance_criteria",
            "line": 829,
            "async": true,
            "decorators": [],
            "docstring": "Generate acceptance criteria for a requirement using the LLM adapter.\n\nArgs:\n    requirement: The requirement dictionary\n    context: Optional additional context about the project\n    model: LLM model to use (defaults to configured default)\n    \nReturns:\n    Dictionary with generated acceptance criteria",
            "args": [
              "self",
              "requirement",
              "context",
              "model"
            ],
            "class": "LLMAdapter",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_parse_requirement_analysis",
            "line": 916,
            "async": false,
            "decorators": [],
            "docstring": "Parse the LLM's response to extract structured analysis data.\n\nArgs:\n    response: The raw response from the LLM\n    \nReturns:\n    Dictionary with structured analysis data",
            "args": [
              "self",
              "response"
            ],
            "class": "LLMAdapter",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "_parse_refined_requirement",
            "line": 990,
            "async": false,
            "decorators": [],
            "docstring": "Parse the LLM's response to extract refined requirement data.\n\nArgs:\n    response: The raw response from the LLM\n    original_requirement: The original requirement dictionary\n    \nReturns:\n    Dictionary with refined requirement data",
            "args": [
              "self",
              "response",
              "original_requirement"
            ],
            "class": "LLMAdapter",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "_parse_validation_result",
            "line": 1042,
            "async": false,
            "decorators": [],
            "docstring": "Parse the LLM's response to extract validation results.\n\nArgs:\n    response: The raw response from the LLM\n    validation_criteria: The original validation criteria\n    \nReturns:\n    Dictionary with validation results by criterion",
            "args": [
              "self",
              "response",
              "validation_criteria"
            ],
            "class": "LLMAdapter",
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "_get_fallback_response",
            "line": 1108,
            "async": false,
            "decorators": [],
            "docstring": "Provide a fallback response when the LLM service is unavailable.\n\nReturns:\n    A helpful error message",
            "args": [
              "self"
            ],
            "class": "LLMAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_available_models",
            "line": 1121,
            "async": true,
            "decorators": [],
            "docstring": "Get the list of available models from the LLM adapter.\n\nReturns:\n    Dictionary mapping providers to their available models",
            "args": [
              "self"
            ],
            "class": "LLMAdapter",
            "complexity": "high",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "LLMAdapter",
            "line": 33,
            "methods": [
              "__init__",
              "_load_templates",
              "_register_core_templates",
              "_parse_requirement_analysis",
              "_parse_refined_requirement",
              "_parse_validation_result",
              "_get_fallback_response"
            ],
            "decorators": [],
            "docstring": "Client for interacting with LLMs through the Tekton LLM Adapter.\n\nThis class provides a unified interface for LLM operations, using the\nenhanced tekton-llm-client features for template management, streaming,\nand response handling.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 14
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 14
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 14
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 14
          },
          {
            "module": "typing.Union",
            "from": "typing",
            "name": "Union",
            "alias": null,
            "line": 14
          },
          {
            "module": "typing.AsyncGenerator",
            "from": "typing",
            "name": "AsyncGenerator",
            "alias": null,
            "line": 14
          },
          {
            "module": "typing.Callable",
            "from": "typing",
            "name": "Callable",
            "alias": null,
            "line": 14
          },
          {
            "module": "typing.Awaitable",
            "from": "typing",
            "name": "Awaitable",
            "alias": null,
            "line": 14
          },
          {
            "module": "tekton_llm_client.TektonLLMClient",
            "from": "tekton_llm_client",
            "name": "TektonLLMClient",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.PromptTemplateRegistry",
            "from": "tekton_llm_client",
            "name": "PromptTemplateRegistry",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.PromptTemplate",
            "from": "tekton_llm_client",
            "name": "PromptTemplate",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.load_template",
            "from": "tekton_llm_client",
            "name": "load_template",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.JSONParser",
            "from": "tekton_llm_client",
            "name": "JSONParser",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.parse_json",
            "from": "tekton_llm_client",
            "name": "parse_json",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.extract_json",
            "from": "tekton_llm_client",
            "name": "extract_json",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.StreamHandler",
            "from": "tekton_llm_client",
            "name": "StreamHandler",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.collect_stream",
            "from": "tekton_llm_client",
            "name": "collect_stream",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.stream_to_string",
            "from": "tekton_llm_client",
            "name": "stream_to_string",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.StructuredOutputParser",
            "from": "tekton_llm_client",
            "name": "StructuredOutputParser",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.OutputFormat",
            "from": "tekton_llm_client",
            "name": "OutputFormat",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.ClientSettings",
            "from": "tekton_llm_client",
            "name": "ClientSettings",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.LLMSettings",
            "from": "tekton_llm_client",
            "name": "LLMSettings",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.load_settings",
            "from": "tekton_llm_client",
            "name": "load_settings",
            "alias": null,
            "line": 17
          },
          {
            "module": "tekton_llm_client.get_env",
            "from": "tekton_llm_client",
            "name": "get_env",
            "alias": null,
            "line": 17
          },
          {
            "module": "re",
            "alias": null,
            "line": 792
          },
          {
            "module": "re",
            "alias": null,
            "line": 889
          },
          {
            "module": "re",
            "alias": null,
            "line": 941
          },
          {
            "module": "re",
            "alias": null,
            "line": 1006
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "LLMAdapter",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 33,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "LLMAdapter._load_templates",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 86,
            "priority": "medium",
            "reason": "High complexity"
          },
          {
            "type": "function",
            "name": "LLMAdapter.chat",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 337,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "LLMAdapter.generate_stream",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 427,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "LLMAdapter.error_generator",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 453,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "LLMAdapter.analyze_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 457,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "LLMAdapter.refine_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 536,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "LLMAdapter.validate_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 615,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "LLMAdapter.detect_conflicts",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 712,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "LLMAdapter.generate_acceptance_criteria",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 829,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "LLMAdapter._parse_refined_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 990,
            "priority": "medium",
            "reason": "High complexity"
          },
          {
            "type": "function",
            "name": "LLMAdapter._parse_validation_result",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 1042,
            "priority": "medium",
            "reason": "High complexity"
          },
          {
            "type": "function",
            "name": "LLMAdapter.get_available_models",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/llm_adapter.py",
            "line": 1121,
            "priority": "high",
            "reason": "Async function, High complexity"
          }
        ]
      },
      "line_count": 1176,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 19,
            "async": false,
            "decorators": [],
            "docstring": "Initialize a project.\n\nArgs:\n    name: Project name\n    description: Project description\n    project_id: Unique identifier\n    created_at: Creation timestamp\n    updated_at: Last update timestamp\n    metadata: Additional metadata",
            "args": [
              "self",
              "name",
              "description",
              "project_id",
              "created_at",
              "updated_at",
              "metadata"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "add_requirement",
            "line": 46,
            "async": false,
            "decorators": [],
            "docstring": "Add a requirement to the project.\n\nArgs:\n    requirement: The requirement to add\n    \nReturns:\n    The requirement ID",
            "args": [
              "self",
              "requirement"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_requirement",
            "line": 59,
            "async": false,
            "decorators": [],
            "docstring": "Get a requirement by ID.\n\nArgs:\n    requirement_id: The requirement ID\n    \nReturns:\n    The requirement or None if not found",
            "args": [
              "self",
              "requirement_id"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "update_requirement",
            "line": 70,
            "async": false,
            "decorators": [],
            "docstring": "Update a requirement.\n\nArgs:\n    requirement_id: The requirement ID\n    **kwargs: Attributes to update\n    \nReturns:\n    Success status",
            "args": [
              "self",
              "requirement_id"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": true
          },
          {
            "name": "delete_requirement",
            "line": 88,
            "async": false,
            "decorators": [],
            "docstring": "Delete a requirement.\n\nArgs:\n    requirement_id: The requirement ID\n    \nReturns:\n    Success status",
            "args": [
              "self",
              "requirement_id"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_all_requirements",
            "line": 103,
            "async": false,
            "decorators": [],
            "docstring": "Get all requirements matching the filters.\n\nArgs:\n    status: Filter by status\n    requirement_type: Filter by type\n    priority: Filter by priority\n    tag: Filter by tag\n    \nReturns:\n    List of matching requirements",
            "args": [
              "self",
              "status",
              "requirement_type",
              "priority",
              "tag"
            ],
            "class": "Project",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "get_requirement_hierarchy",
            "line": 138,
            "async": false,
            "decorators": [],
            "docstring": "Get the hierarchy of requirements.\n\nReturns:\n    Dictionary mapping parent IDs to lists of child IDs",
            "args": [
              "self"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "to_dict",
            "line": 156,
            "async": false,
            "decorators": [],
            "docstring": "Convert the project to a dictionary.",
            "args": [
              "self"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "from_dict",
            "line": 171,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Create a project from a dictionary.",
            "args": [
              "cls",
              "data"
            ],
            "class": "Project",
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "Project",
            "line": 16,
            "methods": [
              "__init__",
              "add_requirement",
              "get_requirement",
              "update_requirement",
              "delete_requirement",
              "get_all_requirements",
              "get_requirement_hierarchy",
              "to_dict",
              "from_dict"
            ],
            "decorators": [],
            "docstring": "A project containing requirements.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 8
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 9
          },
          {
            "module": "telos.core.requirement.Requirement",
            "from": "telos.core.requirement",
            "name": "Requirement",
            "alias": null,
            "line": 11
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "Project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 16,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "Project.add_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 46,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Project.get_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 59,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Project.update_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 70,
            "priority": "high",
            "reason": "Has side effects"
          },
          {
            "type": "function",
            "name": "Project.delete_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 88,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Project.get_all_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 103,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Project.get_requirement_hierarchy",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 138,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Project.to_dict",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 156,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "Project.from_dict",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/project.py",
            "line": 171,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 187,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 20,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the requirements manager.\n\nArgs:\n    storage_dir: Optional directory for storing projects",
            "args": [
              "self",
              "storage_dir"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "create_project",
            "line": 33,
            "async": false,
            "decorators": [],
            "docstring": "Create a new project.\n\nArgs:\n    name: Project name\n    description: Project description\n    metadata: Additional metadata\n    \nReturns:\n    The project ID",
            "args": [
              "self",
              "name",
              "description",
              "metadata"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_project",
            "line": 58,
            "async": false,
            "decorators": [],
            "docstring": "Get a project by ID.\n\nArgs:\n    project_id: The project ID\n    \nReturns:\n    The project or None if not found",
            "args": [
              "self",
              "project_id"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_all_projects",
            "line": 69,
            "async": false,
            "decorators": [],
            "docstring": "Get all projects.\n\nReturns:\n    List of all projects",
            "args": [
              "self"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "delete_project",
            "line": 77,
            "async": false,
            "decorators": [],
            "docstring": "Delete a project.\n\nArgs:\n    project_id: The project ID\n    \nReturns:\n    Success status",
            "args": [
              "self",
              "project_id"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "add_requirement",
            "line": 97,
            "async": false,
            "decorators": [],
            "docstring": "Add a requirement to a project.\n\nArgs:\n    project_id: The project ID\n    title: Requirement title\n    description: Requirement description\n    **kwargs: Additional requirement attributes\n    \nReturns:\n    The requirement ID or None if the project doesn't exist",
            "args": [
              "self",
              "project_id",
              "title",
              "description"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_requirement",
            "line": 128,
            "async": false,
            "decorators": [],
            "docstring": "Get a requirement from a project.\n\nArgs:\n    project_id: The project ID\n    requirement_id: The requirement ID\n    \nReturns:\n    The requirement or None if not found",
            "args": [
              "self",
              "project_id",
              "requirement_id"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "update_requirement",
            "line": 148,
            "async": false,
            "decorators": [],
            "docstring": "Update a requirement.\n\nArgs:\n    project_id: The project ID\n    requirement_id: The requirement ID\n    **kwargs: Attributes to update\n    \nReturns:\n    Success status",
            "args": [
              "self",
              "project_id",
              "requirement_id"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_save_project",
            "line": 176,
            "async": false,
            "decorators": [],
            "docstring": "Save a project to disk.\n\nArgs:\n    project: The project to save",
            "args": [
              "self",
              "project"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": true
          },
          {
            "name": "_delete_project_file",
            "line": 191,
            "async": false,
            "decorators": [],
            "docstring": "Delete a project file.\n\nArgs:\n    project_id: The project ID",
            "args": [
              "self",
              "project_id"
            ],
            "class": "RequirementsManager",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "load_projects",
            "line": 204,
            "async": false,
            "decorators": [],
            "docstring": "Load all projects from the storage directory.",
            "args": [
              "self"
            ],
            "class": "RequirementsManager",
            "complexity": "medium",
            "has_side_effects": true
          },
          {
            "name": "register_with_hermes",
            "line": 225,
            "async": true,
            "decorators": [],
            "docstring": "Register the requirements manager with the Hermes service registry.\n\nArgs:\n    service_registry: Optional service registry instance\n    \nReturns:\n    Success status",
            "args": [
              "self",
              "service_registry"
            ],
            "class": "RequirementsManager",
            "complexity": "medium",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "RequirementsManager",
            "line": 17,
            "methods": [
              "__init__",
              "create_project",
              "get_project",
              "get_all_projects",
              "delete_project",
              "add_requirement",
              "get_requirement",
              "update_requirement",
              "_save_project",
              "_delete_project_file",
              "load_projects"
            ],
            "decorators": [],
            "docstring": "Manager for projects and requirements.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Union",
            "from": "typing",
            "name": "Union",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 9
          },
          {
            "module": "telos.core.requirement.Requirement",
            "from": "telos.core.requirement",
            "name": "Requirement",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.core.project.Project",
            "from": "telos.core.project",
            "name": "Project",
            "alias": null,
            "line": 12
          },
          {
            "module": "hermes.core.service_discovery.ServiceRegistry",
            "from": "hermes.core.service_discovery",
            "name": "ServiceRegistry",
            "alias": null,
            "line": 238
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "RequirementsManager",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 17,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "RequirementsManager.create_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 33,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "RequirementsManager.get_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 58,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "RequirementsManager.get_all_projects",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 69,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "RequirementsManager.delete_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 77,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "RequirementsManager.add_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 97,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "RequirementsManager.get_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 128,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "RequirementsManager.update_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 148,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "RequirementsManager._save_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 176,
            "priority": "medium",
            "reason": "Has side effects"
          },
          {
            "type": "function",
            "name": "RequirementsManager.load_projects",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 204,
            "priority": "high",
            "reason": "Has side effects"
          },
          {
            "type": "function",
            "name": "RequirementsManager.register_with_hermes",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/requirements_manager.py",
            "line": 225,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 266,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/__init__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [],
        "patterns": [],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 1,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the Hermes helper.\n\nArgs:\n    api_url: Optional URL for the Hermes API",
            "args": [
              "self",
              "api_url"
            ],
            "class": "HermesHelper",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "register_service",
            "line": 41,
            "async": true,
            "decorators": [],
            "docstring": "Register a service with Hermes.\n\nArgs:\n    service_id: Service identifier\n    name: Human-readable name\n    version: Service version\n    capabilities: List of service capabilities\n    endpoint: Service endpoint URL\n    metadata: Additional service metadata\n    \nReturns:\n    Registration success status",
            "args": [
              "self",
              "service_id",
              "name",
              "version",
              "capabilities",
              "endpoint",
              "metadata"
            ],
            "class": "HermesHelper",
            "complexity": "high",
            "has_side_effects": true
          },
          {
            "name": "discover_services",
            "line": 138,
            "async": true,
            "decorators": [],
            "docstring": "Discover available services from Hermes.\n\nReturns:\n    Dictionary of services",
            "args": [
              "self"
            ],
            "class": "HermesHelper",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "find_service",
            "line": 159,
            "async": true,
            "decorators": [],
            "docstring": "Find a service with a specific capability.\n\nArgs:\n    capability: Capability to look for\n    \nReturns:\n    Service information or None if not found",
            "args": [
              "self",
              "capability"
            ],
            "class": "HermesHelper",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "invoke_capability",
            "line": 185,
            "async": true,
            "decorators": [],
            "docstring": "Invoke a capability on a service.\n\nArgs:\n    service_id: Service identifier\n    capability: Capability to invoke\n    parameters: Parameters for the capability\n    \nReturns:\n    Result from the capability invocation",
            "args": [
              "self",
              "service_id",
              "capability",
              "parameters"
            ],
            "class": "HermesHelper",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "publish_event",
            "line": 239,
            "async": true,
            "decorators": [],
            "docstring": "Publish an event to Hermes.\n\nArgs:\n    event_type: Type of event\n    payload: Event payload\n    source: Event source\n    \nReturns:\n    Success status",
            "args": [
              "self",
              "event_type",
              "payload",
              "source"
            ],
            "class": "HermesHelper",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "register_with_hermes",
            "line": 280,
            "async": true,
            "decorators": [],
            "docstring": "Register a service with the Hermes service registry.\n\nArgs:\n    service_id: Unique identifier for the service\n    name: Human-readable name for the service\n    capabilities: List of service capabilities\n    metadata: Additional metadata for the service\n    version: Service version\n    endpoint: Service endpoint URL\n    \nReturns:\n    Success status",
            "args": [
              "service_id",
              "name",
              "capabilities",
              "metadata",
              "version",
              "endpoint"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "HermesHelper",
            "line": 24,
            "methods": [
              "__init__"
            ],
            "decorators": [],
            "docstring": "Helper for Hermes integration.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Union",
            "from": "typing",
            "name": "Union",
            "alias": null,
            "line": 13
          },
          {
            "module": "shared.utils.env_config.get_component_config",
            "from": "shared.utils.env_config",
            "name": "get_component_config",
            "alias": null,
            "line": 20
          },
          {
            "module": "hermes.core.service_discovery.ServiceRegistry",
            "from": "hermes.core.service_discovery",
            "name": "ServiceRegistry",
            "alias": null,
            "line": 78
          }
        ],
        "patterns": [
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "HermesHelper",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
            "line": 24,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "HermesHelper.register_service",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
            "line": 41,
            "priority": "high",
            "reason": "Async function, Has side effects, High complexity"
          },
          {
            "type": "function",
            "name": "HermesHelper.discover_services",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
            "line": 138,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "HermesHelper.find_service",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
            "line": 159,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "HermesHelper.invoke_capability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
            "line": 185,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "HermesHelper.publish_event",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
            "line": 239,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "register_with_hermes",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/utils/hermes_helper.py",
            "line": 280,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 316,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
      "analysis": {
        "functions": [],
        "classes": [
          {
            "name": "TraceBase",
            "line": 12,
            "methods": [],
            "decorators": [],
            "docstring": "Base model for trace data.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceCreate",
            "line": 20,
            "methods": [],
            "decorators": [],
            "docstring": "Model for trace creation.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceUpdate",
            "line": 24,
            "methods": [],
            "decorators": [],
            "docstring": "Model for trace updates.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceModel",
            "line": 30,
            "methods": [],
            "decorators": [],
            "docstring": "Model for trace data.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceListItem",
            "line": 38,
            "methods": [],
            "decorators": [],
            "docstring": "Model for trace list item.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceList",
            "line": 47,
            "methods": [],
            "decorators": [],
            "docstring": "Model for trace list.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceQueryResult",
            "line": 52,
            "methods": [],
            "decorators": [],
            "docstring": "Model for trace query result.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 7
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 8
          },
          {
            "module": "pydantic.Field",
            "from": "pydantic",
            "name": "Field",
            "alias": null,
            "line": 9
          },
          {
            "module": "pydantic.ConfigDict",
            "from": "pydantic",
            "name": "ConfigDict",
            "alias": null,
            "line": 9
          },
          {
            "module": "tekton.models.base.TektonBaseModel",
            "from": "tekton.models.base",
            "name": "TektonBaseModel",
            "alias": null,
            "line": 10
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "TraceBase",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
            "line": 12,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceCreate",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
            "line": 20,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceUpdate",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
            "line": 24,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceModel",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
            "line": 30,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceListItem",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
            "line": 38,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceList",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
            "line": 47,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceQueryResult",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/trace.py",
            "line": 52,
            "priority": "high",
            "reason": "Class definition"
          }
        ]
      },
      "line_count": 56,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
      "analysis": {
        "functions": [],
        "classes": [
          {
            "name": "HistoryEntry",
            "line": 12,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement history entry.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementBase",
            "line": 18,
            "methods": [],
            "decorators": [],
            "docstring": "Base model for requirement data.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementCreate",
            "line": 30,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement creation.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementUpdate",
            "line": 34,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement updates.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementModel",
            "line": 46,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement data.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementListItem",
            "line": 56,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement list item.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementList",
            "line": 67,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement list.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementRefinement",
            "line": 72,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement refinement.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementRefinementResult",
            "line": 77,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement refinement result.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 7
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 8
          },
          {
            "module": "pydantic.Field",
            "from": "pydantic",
            "name": "Field",
            "alias": null,
            "line": 9
          },
          {
            "module": "pydantic.ConfigDict",
            "from": "pydantic",
            "name": "ConfigDict",
            "alias": null,
            "line": 9
          },
          {
            "module": "tekton.models.base.TektonBaseModel",
            "from": "tekton.models.base",
            "name": "TektonBaseModel",
            "alias": null,
            "line": 10
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "HistoryEntry",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 12,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementBase",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 18,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementCreate",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 30,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementUpdate",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 34,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementModel",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 46,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementListItem",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 56,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementList",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 67,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementRefinement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 72,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementRefinementResult",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/requirement.py",
            "line": 77,
            "priority": "high",
            "reason": "Class definition"
          }
        ]
      },
      "line_count": 84,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/__init__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "project.ProjectModel",
            "from": "project",
            "name": "ProjectModel",
            "alias": null,
            "line": 7
          },
          {
            "module": "requirement.RequirementModel",
            "from": "requirement",
            "name": "RequirementModel",
            "alias": null,
            "line": 8
          },
          {
            "module": "trace.TraceModel",
            "from": "trace",
            "name": "TraceModel",
            "alias": null,
            "line": 9
          },
          {
            "module": "validation.ValidationModel",
            "from": "validation",
            "name": "ValidationModel",
            "alias": null,
            "line": 10
          },
          {
            "module": "export.ExportModel",
            "from": "export",
            "name": "ExportModel",
            "alias": null,
            "line": 11
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 19,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/export.py",
      "analysis": {
        "functions": [],
        "classes": [
          {
            "name": "ExportOptions",
            "line": 11,
            "methods": [],
            "decorators": [],
            "docstring": "Model for export options.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ExportResult",
            "line": 19,
            "methods": [],
            "decorators": [],
            "docstring": "Model for export result.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ImportOptions",
            "line": 25,
            "methods": [],
            "decorators": [],
            "docstring": "Model for import options.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ImportResult",
            "line": 31,
            "methods": [],
            "decorators": [],
            "docstring": "Model for import result.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ExportModel",
            "line": 39,
            "methods": [],
            "decorators": [],
            "docstring": "Model for export data.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 7
          },
          {
            "module": "pydantic.Field",
            "from": "pydantic",
            "name": "Field",
            "alias": null,
            "line": 8
          },
          {
            "module": "tekton.models.base.TektonBaseModel",
            "from": "tekton.models.base",
            "name": "TektonBaseModel",
            "alias": null,
            "line": 9
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "ExportOptions",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/export.py",
            "line": 11,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ExportResult",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/export.py",
            "line": 19,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ImportOptions",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/export.py",
            "line": 25,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ImportResult",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/export.py",
            "line": 31,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ExportModel",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/export.py",
            "line": 39,
            "priority": "high",
            "reason": "Class definition"
          }
        ]
      },
      "line_count": 42,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
      "analysis": {
        "functions": [],
        "classes": [
          {
            "name": "ProjectBase",
            "line": 12,
            "methods": [],
            "decorators": [],
            "docstring": "Base model for project data.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectCreate",
            "line": 18,
            "methods": [],
            "decorators": [],
            "docstring": "Model for project creation.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectUpdate",
            "line": 22,
            "methods": [],
            "decorators": [],
            "docstring": "Model for project updates.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementSummary",
            "line": 28,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement summary in project context.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectHierarchy",
            "line": 36,
            "methods": [],
            "decorators": [],
            "docstring": "Model for project hierarchy data.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectModel",
            "line": 40,
            "methods": [],
            "decorators": [],
            "docstring": "Model for project data.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectListItem",
            "line": 50,
            "methods": [],
            "decorators": [],
            "docstring": "Model for project list item.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectList",
            "line": 59,
            "methods": [],
            "decorators": [],
            "docstring": "Model for project list.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 7
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 8
          },
          {
            "module": "pydantic.Field",
            "from": "pydantic",
            "name": "Field",
            "alias": null,
            "line": 9
          },
          {
            "module": "pydantic.ConfigDict",
            "from": "pydantic",
            "name": "ConfigDict",
            "alias": null,
            "line": 9
          },
          {
            "module": "tekton.models.base.TektonBaseModel",
            "from": "tekton.models.base",
            "name": "TektonBaseModel",
            "alias": null,
            "line": 10
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "ProjectBase",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 12,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectCreate",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 18,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectUpdate",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 22,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementSummary",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 28,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectHierarchy",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 36,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectModel",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 40,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectListItem",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 50,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectList",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/project.py",
            "line": 59,
            "priority": "high",
            "reason": "Class definition"
          }
        ]
      },
      "line_count": 62,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/validation.py",
      "analysis": {
        "functions": [],
        "classes": [
          {
            "name": "ValidationCriteria",
            "line": 11,
            "methods": [],
            "decorators": [],
            "docstring": "Model for validation criteria.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ValidationIssue",
            "line": 20,
            "methods": [],
            "decorators": [],
            "docstring": "Model for validation issue.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementValidationResult",
            "line": 27,
            "methods": [],
            "decorators": [],
            "docstring": "Model for requirement validation result.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ValidationSummary",
            "line": 35,
            "methods": [],
            "decorators": [],
            "docstring": "Model for validation summary.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ValidationModel",
            "line": 43,
            "methods": [],
            "decorators": [],
            "docstring": "Model for validation result.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 7
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 7
          },
          {
            "module": "pydantic.Field",
            "from": "pydantic",
            "name": "Field",
            "alias": null,
            "line": 8
          },
          {
            "module": "tekton.models.base.TektonBaseModel",
            "from": "tekton.models.base",
            "name": "TektonBaseModel",
            "alias": null,
            "line": 9
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "ValidationCriteria",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/validation.py",
            "line": 11,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ValidationIssue",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/validation.py",
            "line": 20,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementValidationResult",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/validation.py",
            "line": 27,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ValidationSummary",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/validation.py",
            "line": 35,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ValidationModel",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/models/validation.py",
            "line": 43,
            "priority": "high",
            "reason": "Class definition"
          }
        ]
      },
      "line_count": 49,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/__init__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "app.app",
            "from": "app",
            "name": "app",
            "alias": null,
            "line": 8
          }
        ],
        "patterns": [
          {
            "type": "websocket",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 10,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 46,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the FastMCP adapter with dependencies.",
            "args": [
              "self",
              "requirements_manager_instance",
              "prometheus_connector_instance"
            ],
            "class": "FastMCPAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_requirements_manager",
            "line": 51,
            "async": true,
            "decorators": [],
            "docstring": "Get the requirements manager instance for dependency injection.",
            "args": [
              "self"
            ],
            "class": "FastMCPAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_prometheus_connector",
            "line": 55,
            "async": true,
            "decorators": [],
            "docstring": "Get the Prometheus connector for dependency injection.",
            "args": [
              "self"
            ],
            "class": "FastMCPAdapter",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_requirements_manager_dependency",
            "line": 64,
            "async": false,
            "decorators": [],
            "docstring": "Dependency for injecting RequirementsManager into FastMCP tools.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_get_requirements_manager",
            "line": 66,
            "async": true,
            "decorators": [],
            "docstring": null,
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_prometheus_connector_dependency",
            "line": 71,
            "async": false,
            "decorators": [],
            "docstring": "Dependency for injecting PrometheusConnector into FastMCP tools.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_get_prometheus_connector",
            "line": 73,
            "async": true,
            "decorators": [],
            "docstring": null,
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "lifespan",
            "line": 79,
            "async": true,
            "decorators": [
              "@asynccontextmanager"
            ],
            "docstring": "Application lifespan manager for FastMCP initialization.",
            "args": [
              "app"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "fastmcp_health",
            "line": 164,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Health check endpoint for FastMCP.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "execute_workflow",
            "line": 178,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Execute predefined workflows for complex Telos operations.",
            "args": [
              "workflow_name",
              "parameters"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "root",
            "line": 352,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Root endpoint providing FastMCP service information.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "health",
            "line": 365,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Health check endpoint.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "FastMCPAdapter",
            "line": 43,
            "methods": [
              "__init__"
            ],
            "decorators": [],
            "docstring": "Adapter for integrating FastMCP with Telos services.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [
          {
            "name": "fastmcp_health",
            "line": 164,
            "method": "@get",
            "async": true
          },
          {
            "name": "execute_workflow",
            "line": 178,
            "method": "@post",
            "async": true
          },
          {
            "name": "root",
            "line": 352,
            "method": "@get",
            "async": true
          },
          {
            "name": "health",
            "line": 365,
            "method": "@get",
            "async": true
          }
        ],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 11
          },
          {
            "module": "typing.Union",
            "from": "typing",
            "name": "Union",
            "alias": null,
            "line": 11
          },
          {
            "module": "contextlib.asynccontextmanager",
            "from": "contextlib",
            "name": "asynccontextmanager",
            "alias": null,
            "line": 12
          },
          {
            "module": "fastapi.FastAPI",
            "from": "fastapi",
            "name": "FastAPI",
            "alias": null,
            "line": 14
          },
          {
            "module": "fastapi.HTTPException",
            "from": "fastapi",
            "name": "HTTPException",
            "alias": null,
            "line": 14
          },
          {
            "module": "fastapi.Depends",
            "from": "fastapi",
            "name": "Depends",
            "alias": null,
            "line": 14
          },
          {
            "module": "fastapi.middleware.cors.CORSMiddleware",
            "from": "fastapi.middleware.cors",
            "name": "CORSMiddleware",
            "alias": null,
            "line": 15
          },
          {
            "module": "tekton.mcp.fastmcp.utils.endpoints.create_mcp_router",
            "from": "tekton.mcp.fastmcp.utils.endpoints",
            "name": "create_mcp_router",
            "alias": null,
            "line": 20
          },
          {
            "module": "tekton.mcp.fastmcp.utils.endpoints.add_standard_mcp_endpoints",
            "from": "tekton.mcp.fastmcp.utils.endpoints",
            "name": "add_standard_mcp_endpoints",
            "alias": null,
            "line": 20
          },
          {
            "module": "tekton.mcp.fastmcp.registry.FastMCPRegistry",
            "from": "tekton.mcp.fastmcp.registry",
            "name": "FastMCPRegistry",
            "alias": null,
            "line": 21
          },
          {
            "module": "tekton.mcp.fastmcp.client.FastMCPClient",
            "from": "tekton.mcp.fastmcp.client",
            "name": "FastMCPClient",
            "alias": null,
            "line": 22
          },
          {
            "module": "core.mcp.tools.requirements_management_tools",
            "from": "core.mcp.tools",
            "name": "requirements_management_tools",
            "alias": null,
            "line": 24
          },
          {
            "module": "core.mcp.tools.requirement_tracing_tools",
            "from": "core.mcp.tools",
            "name": "requirement_tracing_tools",
            "alias": null,
            "line": 24
          },
          {
            "module": "core.mcp.tools.requirement_validation_tools",
            "from": "core.mcp.tools",
            "name": "requirement_validation_tools",
            "alias": null,
            "line": 24
          },
          {
            "module": "core.mcp.tools.prometheus_integration_tools",
            "from": "core.mcp.tools",
            "name": "prometheus_integration_tools",
            "alias": null,
            "line": 24
          },
          {
            "module": "core.requirements_manager.RequirementsManager",
            "from": "core.requirements_manager",
            "name": "RequirementsManager",
            "alias": null,
            "line": 88
          },
          {
            "module": "prometheus_connector.TelosPrometheusConnector",
            "from": "prometheus_connector",
            "name": "TelosPrometheusConnector",
            "alias": null,
            "line": 89
          },
          {
            "module": "core.mcp.tools.create_project",
            "from": "core.mcp.tools",
            "name": "create_project",
            "alias": null,
            "line": 190
          },
          {
            "module": "core.mcp.tools.create_requirement",
            "from": "core.mcp.tools",
            "name": "create_requirement",
            "alias": null,
            "line": 205
          },
          {
            "module": "core.mcp.tools.validate_project",
            "from": "core.mcp.tools",
            "name": "validate_project",
            "alias": null,
            "line": 241
          },
          {
            "module": "core.mcp.tools.analyze_requirements",
            "from": "core.mcp.tools",
            "name": "analyze_requirements",
            "alias": null,
            "line": 253
          },
          {
            "module": "core.mcp.tools.update_requirement",
            "from": "core.mcp.tools",
            "name": "update_requirement",
            "alias": null,
            "line": 276
          },
          {
            "module": "core.mcp.tools.list_traces",
            "from": "core.mcp.tools",
            "name": "list_traces",
            "alias": null,
            "line": 307
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 377
          },
          {
            "module": "tekton.utils.port_config.get_telos_port",
            "from": "tekton.utils.port_config",
            "name": "get_telos_port",
            "alias": null,
            "line": 378
          }
        ],
        "patterns": [
          {
            "type": "singleton",
            "location": "file",
            "line": 0
          },
          {
            "type": "fastapi",
            "location": "file",
            "line": 0
          },
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          },
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "FastMCPAdapter",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 43,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "FastMCPAdapter.get_requirements_manager",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 51,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "FastMCPAdapter.get_prometheus_connector",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 55,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "get_requirements_manager_dependency",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 64,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "get_prometheus_connector_dependency",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 71,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "lifespan",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 79,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "fastmcp_health",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 164,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "execute_workflow",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 178,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "root",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 352,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "health",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/fastmcp_endpoints.py",
            "line": 365,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 389,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
      "analysis": {
        "functions": [
          {
            "name": "startup_callback",
            "line": 127,
            "async": true,
            "decorators": [],
            "docstring": "Initialize component during startup.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "fastmcp_health",
            "line": 162,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Health check endpoint for FastMCP.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "health",
            "line": 216,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Health check endpoint.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "ready",
            "line": 222,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Readiness check endpoint.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "discovery",
            "line": 234,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Service discovery endpoint.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "root",
            "line": 294,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Root endpoint - provides basic information",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "list_projects",
            "line": 313,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "List all projects",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "create_project",
            "line": 335,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Create a new project",
            "args": [
              "request"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_project",
            "line": 358,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Get a specific project with its requirements",
            "args": [
              "project_id"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "update_project",
            "line": 377,
            "async": true,
            "decorators": [
              "@put"
            ],
            "docstring": "Update a project",
            "args": [
              "project_id",
              "request"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": true
          },
          {
            "name": "delete_project",
            "line": 417,
            "async": true,
            "decorators": [
              "@delete"
            ],
            "docstring": "Delete a project",
            "args": [
              "project_id"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": true
          },
          {
            "name": "create_requirement",
            "line": 430,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Create a new requirement in a project",
            "args": [
              "project_id",
              "request"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "list_requirements",
            "line": 472,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "List requirements for a project with optional filtering",
            "args": [
              "project_id",
              "status",
              "requirement_type",
              "priority",
              "tag"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_requirement",
            "line": 502,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Get a specific requirement",
            "args": [
              "project_id",
              "requirement_id"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "update_requirement",
            "line": 521,
            "async": true,
            "decorators": [
              "@put"
            ],
            "docstring": "Update a requirement",
            "args": [
              "project_id",
              "requirement_id",
              "request"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": true
          },
          {
            "name": "delete_requirement",
            "line": 594,
            "async": true,
            "decorators": [
              "@delete"
            ],
            "docstring": "Delete a requirement",
            "args": [
              "project_id",
              "requirement_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": true
          },
          {
            "name": "refine_requirement",
            "line": 622,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Refine a requirement with feedback",
            "args": [
              "project_id",
              "requirement_id",
              "request"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "validate_project",
            "line": 681,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Validate a project's requirements against provided criteria",
            "args": [
              "project_id",
              "request"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "list_traces",
            "line": 772,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "List all requirement traces for a project",
            "args": [
              "project_id"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "create_trace",
            "line": 788,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Create a new trace between requirements",
            "args": [
              "project_id",
              "request"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "get_trace",
            "line": 840,
            "async": true,
            "decorators": [
              "@get"
            ],
            "docstring": "Get a specific trace",
            "args": [
              "project_id",
              "trace_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "update_trace",
            "line": 863,
            "async": true,
            "decorators": [
              "@put"
            ],
            "docstring": "Update a trace",
            "args": [
              "project_id",
              "trace_id",
              "request"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": true
          },
          {
            "name": "delete_trace",
            "line": 916,
            "async": true,
            "decorators": [
              "@delete"
            ],
            "docstring": "Delete a trace",
            "args": [
              "project_id",
              "trace_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": true
          },
          {
            "name": "export_project",
            "line": 948,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Export a project in the specified format",
            "args": [
              "project_id",
              "request"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": true
          },
          {
            "name": "import_project",
            "line": 1069,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Import a project from external data",
            "args": [
              "request"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "analyze_requirements",
            "line": 1118,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Analyze requirements for planning readiness",
            "args": [
              "project_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "create_plan",
            "line": 1141,
            "async": true,
            "decorators": [
              "@post"
            ],
            "docstring": "Create a plan for the project using Prometheus",
            "args": [
              "project_id"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "websocket_endpoint",
            "line": 1165,
            "async": true,
            "decorators": [
              "@websocket"
            ],
            "docstring": "WebSocket endpoint for real-time updates",
            "args": [
              "websocket"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "global_exception_handler",
            "line": 1314,
            "async": true,
            "decorators": [
              "@exception_handler"
            ],
            "docstring": "Global exception handler for API",
            "args": [
              "request",
              "exc"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "ProjectCreateRequest",
            "line": 52,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectUpdateRequest",
            "line": 57,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementCreateRequest",
            "line": 62,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementUpdateRequest",
            "line": 74,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementRefinementRequest",
            "line": 85,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementValidationRequest",
            "line": 89,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectExportRequest",
            "line": 92,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "ProjectImportRequest",
            "line": 96,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceCreateRequest",
            "line": 101,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "TraceUpdateRequest",
            "line": 108,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "WebSocketRequest",
            "line": 113,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "WebSocketResponse",
            "line": 120,
            "methods": [],
            "decorators": [],
            "docstring": null,
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [
          {
            "name": "fastmcp_health",
            "line": 162,
            "method": "@get",
            "async": true
          },
          {
            "name": "health",
            "line": 216,
            "method": "@get",
            "async": true
          },
          {
            "name": "ready",
            "line": 222,
            "method": "@get",
            "async": true
          },
          {
            "name": "discovery",
            "line": 234,
            "method": "@get",
            "async": true
          },
          {
            "name": "root",
            "line": 294,
            "method": "@get",
            "async": true
          },
          {
            "name": "list_projects",
            "line": 313,
            "method": "@get",
            "async": true
          },
          {
            "name": "create_project",
            "line": 335,
            "method": "@post",
            "async": true
          },
          {
            "name": "get_project",
            "line": 358,
            "method": "@get",
            "async": true
          },
          {
            "name": "update_project",
            "line": 377,
            "method": "@put",
            "async": true
          },
          {
            "name": "delete_project",
            "line": 417,
            "method": "@delete",
            "async": true
          },
          {
            "name": "create_requirement",
            "line": 430,
            "method": "@post",
            "async": true
          },
          {
            "name": "list_requirements",
            "line": 472,
            "method": "@get",
            "async": true
          },
          {
            "name": "get_requirement",
            "line": 502,
            "method": "@get",
            "async": true
          },
          {
            "name": "update_requirement",
            "line": 521,
            "method": "@put",
            "async": true
          },
          {
            "name": "delete_requirement",
            "line": 594,
            "method": "@delete",
            "async": true
          },
          {
            "name": "refine_requirement",
            "line": 622,
            "method": "@post",
            "async": true
          },
          {
            "name": "validate_project",
            "line": 681,
            "method": "@post",
            "async": true
          },
          {
            "name": "list_traces",
            "line": 772,
            "method": "@get",
            "async": true
          },
          {
            "name": "create_trace",
            "line": 788,
            "method": "@post",
            "async": true
          },
          {
            "name": "get_trace",
            "line": 840,
            "method": "@get",
            "async": true
          },
          {
            "name": "update_trace",
            "line": 863,
            "method": "@put",
            "async": true
          },
          {
            "name": "delete_trace",
            "line": 916,
            "method": "@delete",
            "async": true
          },
          {
            "name": "export_project",
            "line": 948,
            "method": "@post",
            "async": true
          },
          {
            "name": "import_project",
            "line": 1069,
            "method": "@post",
            "async": true
          },
          {
            "name": "analyze_requirements",
            "line": 1118,
            "method": "@post",
            "async": true
          },
          {
            "name": "create_plan",
            "line": 1141,
            "method": "@post",
            "async": true
          }
        ],
        "mcp_tools": [],
        "websocket_handlers": [
          {
            "name": "websocket_endpoint",
            "line": 1165,
            "async": true
          }
        ],
        "decorators": [],
        "imports": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 13
          },
          {
            "module": "typing.Union",
            "from": "typing",
            "name": "Union",
            "alias": null,
            "line": 13
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 14
          },
          {
            "module": "fastapi.FastAPI",
            "from": "fastapi",
            "name": "FastAPI",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.WebSocket",
            "from": "fastapi",
            "name": "WebSocket",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.WebSocketDisconnect",
            "from": "fastapi",
            "name": "WebSocketDisconnect",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.HTTPException",
            "from": "fastapi",
            "name": "HTTPException",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.BackgroundTasks",
            "from": "fastapi",
            "name": "BackgroundTasks",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.Query",
            "from": "fastapi",
            "name": "Query",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.Path",
            "from": "fastapi",
            "name": "Path",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.Depends",
            "from": "fastapi",
            "name": "Depends",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.Body",
            "from": "fastapi",
            "name": "Body",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.APIRouter",
            "from": "fastapi",
            "name": "APIRouter",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.Request",
            "from": "fastapi",
            "name": "Request",
            "alias": null,
            "line": 16
          },
          {
            "module": "fastapi.middleware.cors.CORSMiddleware",
            "from": "fastapi.middleware.cors",
            "name": "CORSMiddleware",
            "alias": null,
            "line": 17
          },
          {
            "module": "fastapi.responses.JSONResponse",
            "from": "fastapi.responses",
            "name": "JSONResponse",
            "alias": null,
            "line": 18
          },
          {
            "module": "sse_starlette.sse.EventSourceResponse",
            "from": "sse_starlette.sse",
            "name": "EventSourceResponse",
            "alias": null,
            "line": 19
          },
          {
            "module": "pydantic.Field",
            "from": "pydantic",
            "name": "Field",
            "alias": null,
            "line": 20
          },
          {
            "module": "tekton.models.base.TektonBaseModel",
            "from": "tekton.models.base",
            "name": "TektonBaseModel",
            "alias": null,
            "line": 21
          },
          {
            "module": "shared.utils.global_config.GlobalConfig",
            "from": "shared.utils.global_config",
            "name": "GlobalConfig",
            "alias": null,
            "line": 29
          },
          {
            "module": "shared.utils.logging_setup.setup_component_logging",
            "from": "shared.utils.logging_setup",
            "name": "setup_component_logging",
            "alias": "setup_component_logger",
            "line": 30
          },
          {
            "module": "shared.api.create_standard_routers",
            "from": "shared.api",
            "name": "create_standard_routers",
            "alias": null,
            "line": 31
          },
          {
            "module": "shared.api.mount_standard_routers",
            "from": "shared.api",
            "name": "mount_standard_routers",
            "alias": null,
            "line": 31
          },
          {
            "module": "shared.api.create_ready_endpoint",
            "from": "shared.api",
            "name": "create_ready_endpoint",
            "alias": null,
            "line": 31
          },
          {
            "module": "shared.api.create_discovery_endpoint",
            "from": "shared.api",
            "name": "create_discovery_endpoint",
            "alias": null,
            "line": 31
          },
          {
            "module": "shared.api.get_openapi_configuration",
            "from": "shared.api",
            "name": "get_openapi_configuration",
            "alias": null,
            "line": 31
          },
          {
            "module": "shared.api.EndpointInfo",
            "from": "shared.api",
            "name": "EndpointInfo",
            "alias": null,
            "line": 31
          },
          {
            "module": "core.telos_component.TelosComponent",
            "from": "core.telos_component",
            "name": "TelosComponent",
            "alias": null,
            "line": 43
          },
          {
            "module": "core.project.Project",
            "from": "core.project",
            "name": "Project",
            "alias": null,
            "line": 44
          },
          {
            "module": "core.requirement.Requirement",
            "from": "core.requirement",
            "name": "Requirement",
            "alias": null,
            "line": 45
          },
          {
            "module": "tekton.mcp.fastmcp.server.FastMCPServer",
            "from": "tekton.mcp.fastmcp.server",
            "name": "FastMCPServer",
            "alias": null,
            "line": 137
          },
          {
            "module": "tekton.mcp.fastmcp.utils.endpoints.add_mcp_endpoints",
            "from": "tekton.mcp.fastmcp.utils.endpoints",
            "name": "add_mcp_endpoints",
            "alias": null,
            "line": 138
          },
          {
            "module": "core.mcp.tools.requirements_management_tools",
            "from": "core.mcp.tools",
            "name": "requirements_management_tools",
            "alias": null,
            "line": 139
          },
          {
            "module": "core.mcp.tools.requirement_tracing_tools",
            "from": "core.mcp.tools",
            "name": "requirement_tracing_tools",
            "alias": null,
            "line": 139
          },
          {
            "module": "core.mcp.tools.requirement_validation_tools",
            "from": "core.mcp.tools",
            "name": "requirement_validation_tools",
            "alias": null,
            "line": 139
          },
          {
            "module": "core.mcp.tools.prometheus_integration_tools",
            "from": "core.mcp.tools",
            "name": "prometheus_integration_tools",
            "alias": null,
            "line": 139
          },
          {
            "module": "telos.core.mcp.hermes_bridge.TelosMCPBridge",
            "from": "telos.core.mcp.hermes_bridge",
            "name": "TelosMCPBridge",
            "alias": null,
            "line": 185
          },
          {
            "module": "ui.interactive_refine.refine_requirement_with_feedback",
            "from": "ui.interactive_refine",
            "name": "refine_requirement_with_feedback",
            "alias": null,
            "line": 641
          },
          {
            "module": "io.StringIO",
            "from": "io",
            "name": "StringIO",
            "alias": null,
            "line": 979
          },
          {
            "module": "telos.api.fastmcp_endpoints.mcp_router",
            "from": "telos.api.fastmcp_endpoints",
            "name": "mcp_router",
            "alias": null,
            "line": 1306
          },
          {
            "module": "shared.utils.socket_server.run_component_server",
            "from": "shared.utils.socket_server",
            "name": "run_component_server",
            "alias": null,
            "line": 1324
          }
        ],
        "patterns": [
          {
            "type": "singleton",
            "location": "file",
            "line": 0
          },
          {
            "type": "fastapi",
            "location": "file",
            "line": 0
          },
          {
            "type": "websocket",
            "location": "file",
            "line": 0
          },
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          },
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "ProjectCreateRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 52,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectUpdateRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 57,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementCreateRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 62,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementUpdateRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 74,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementRefinementRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 85,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "RequirementValidationRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 89,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectExportRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 92,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "ProjectImportRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 96,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceCreateRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 101,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "TraceUpdateRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 108,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "WebSocketRequest",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 113,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "class_definition",
            "name": "WebSocketResponse",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 120,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "startup_callback",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 127,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "fastmcp_health",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 162,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "health",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 216,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "ready",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 222,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "discovery",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 234,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "root",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 294,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "list_projects",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 313,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "create_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 335,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "get_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 358,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "update_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 377,
            "priority": "high",
            "reason": "Async function, Has side effects, High complexity"
          },
          {
            "type": "function",
            "name": "delete_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 417,
            "priority": "high",
            "reason": "Async function, Has side effects"
          },
          {
            "type": "function",
            "name": "create_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 430,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "list_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 472,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "get_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 502,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "update_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 521,
            "priority": "high",
            "reason": "Async function, Has side effects, High complexity"
          },
          {
            "type": "function",
            "name": "delete_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 594,
            "priority": "high",
            "reason": "Async function, Has side effects"
          },
          {
            "type": "function",
            "name": "refine_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 622,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "validate_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 681,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "list_traces",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 772,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "create_trace",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 788,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "get_trace",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 840,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "update_trace",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 863,
            "priority": "high",
            "reason": "Async function, Has side effects, High complexity"
          },
          {
            "type": "function",
            "name": "delete_trace",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 916,
            "priority": "high",
            "reason": "Async function, Has side effects"
          },
          {
            "type": "function",
            "name": "export_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 948,
            "priority": "high",
            "reason": "Async function, Has side effects, High complexity"
          },
          {
            "type": "function",
            "name": "import_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 1069,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "analyze_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 1118,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "create_plan",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 1141,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "websocket_endpoint",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 1165,
            "priority": "high",
            "reason": "Async function, High complexity"
          },
          {
            "type": "function",
            "name": "global_exception_handler",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/app.py",
            "line": 1314,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 1335,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/api/__main__.py",
      "analysis": {
        "functions": [],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "uvicorn",
            "alias": null,
            "line": 2
          },
          {
            "module": "os",
            "alias": null,
            "line": 3
          },
          {
            "module": "sys",
            "alias": null,
            "line": 4
          },
          {
            "module": "shared.utils.env_config.get_component_config",
            "from": "shared.utils.env_config",
            "name": "get_component_config",
            "alias": null,
            "line": 11
          },
          {
            "module": "telos.api.app.app",
            "from": "telos.api.app",
            "name": "app",
            "alias": null,
            "line": 12
          }
        ],
        "patterns": [],
        "side_effects": [],
        "landmarks": []
      },
      "line_count": 22,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
      "analysis": {
        "functions": [
          {
            "name": "__init__",
            "line": 24,
            "async": false,
            "decorators": [],
            "docstring": "Initialize the Telos MCP Bridge.",
            "args": [
              "self",
              "requirements_manager",
              "prometheus_connector",
              "component_name"
            ],
            "class": "TelosMCPBridge",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "initialize",
            "line": 32,
            "async": true,
            "decorators": [],
            "docstring": "Initialize the MCP service and register with Hermes.",
            "args": [
              "self"
            ],
            "class": "TelosMCPBridge",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "register_default_tools",
            "line": 57,
            "async": true,
            "decorators": [],
            "docstring": "Register standard tools like health check and component info.",
            "args": [
              "self"
            ],
            "class": "TelosMCPBridge",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "register_fastmcp_tools",
            "line": 72,
            "async": true,
            "decorators": [],
            "docstring": "Register FastMCP tools with Hermes.",
            "args": [
              "self"
            ],
            "class": "TelosMCPBridge",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "register_fastmcp_tool",
            "line": 85,
            "async": true,
            "decorators": [],
            "docstring": "Register a single FastMCP tool with Hermes.",
            "args": [
              "self",
              "fastmcp_tool"
            ],
            "class": "TelosMCPBridge",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "handler",
            "line": 90,
            "async": true,
            "decorators": [],
            "docstring": null,
            "args": [
              "parameters"
            ],
            "class": "TelosMCPBridge",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "register_tool_with_hermes",
            "line": 145,
            "async": true,
            "decorators": [],
            "docstring": "Register a standard MCP tool with Hermes.",
            "args": [
              "self",
              "tool"
            ],
            "class": "TelosMCPBridge",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "_get_health_status",
            "line": 166,
            "async": true,
            "decorators": [],
            "docstring": "Get health status from Telos requirements manager.",
            "args": [
              "self"
            ],
            "class": "TelosMCPBridge",
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "shutdown",
            "line": 201,
            "async": true,
            "decorators": [],
            "docstring": "Shutdown the MCP service and unregister from Hermes.",
            "args": [
              "self"
            ],
            "class": "TelosMCPBridge",
            "complexity": "medium",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "TelosMCPBridge",
            "line": 16,
            "methods": [
              "__init__"
            ],
            "decorators": [],
            "docstring": "Bridge between Telos's FastMCP tools and Hermes MCP aggregator.\n\nThis class allows Telos to register its tools with Hermes while\nmaintaining the existing FastMCP implementation.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 9
          },
          {
            "module": "shared.mcp.MCPService",
            "from": "shared.mcp",
            "name": "MCPService",
            "alias": null,
            "line": 10
          },
          {
            "module": "shared.mcp.MCPConfig",
            "from": "shared.mcp",
            "name": "MCPConfig",
            "alias": null,
            "line": 10
          },
          {
            "module": "shared.mcp.client.HermesMCPClient",
            "from": "shared.mcp.client",
            "name": "HermesMCPClient",
            "alias": null,
            "line": 11
          },
          {
            "module": "shared.mcp.tools.HealthCheckTool",
            "from": "shared.mcp.tools",
            "name": "HealthCheckTool",
            "alias": null,
            "line": 12
          },
          {
            "module": "shared.mcp.tools.ComponentInfoTool",
            "from": "shared.mcp.tools",
            "name": "ComponentInfoTool",
            "alias": null,
            "line": 12
          },
          {
            "module": "telos.core.mcp.tools.get_all_tools",
            "from": "telos.core.mcp.tools",
            "name": "get_all_tools",
            "alias": null,
            "line": 46
          },
          {
            "module": "telos.api.fastmcp_endpoints.adapter",
            "from": "telos.api.fastmcp_endpoints",
            "name": "adapter",
            "alias": null,
            "line": 92
          },
          {
            "module": "tekton.mcp.fastmcp.schema.MCPRequest",
            "from": "tekton.mcp.fastmcp.schema",
            "name": "MCPRequest",
            "alias": null,
            "line": 93
          }
        ],
        "patterns": [
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          },
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "TelosMCPBridge",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 16,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "TelosMCPBridge.initialize",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 32,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosMCPBridge.register_default_tools",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 57,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosMCPBridge.register_fastmcp_tools",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 72,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosMCPBridge.register_fastmcp_tool",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 85,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosMCPBridge.handler",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 90,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosMCPBridge.register_tool_with_hermes",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 145,
            "priority": "high",
            "reason": "Async function"
          },
          {
            "type": "function",
            "name": "TelosMCPBridge.shutdown",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/hermes_bridge.py",
            "line": 201,
            "priority": "high",
            "reason": "Async function"
          }
        ]
      },
      "line_count": 226,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
      "analysis": {
        "functions": [
          {
            "name": "mcp_tool",
            "line": 19,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "decorator",
            "line": 20,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "func"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "mcp_capability",
            "line": 24,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "decorator",
            "line": 25,
            "async": false,
            "decorators": [],
            "docstring": null,
            "args": [
              "cls"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "create_project",
            "line": 48,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Create a new requirements project.\n\nArgs:\n    name: Name of the project\n    description: Optional project description\n    metadata: Optional metadata dictionary\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing project_id, name, and creation details",
            "args": [
              "name",
              "description",
              "metadata",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "get_project",
            "line": 96,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Get a project with its requirements and hierarchy.\n\nArgs:\n    project_id: ID of the project to retrieve\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing project details, requirements, and hierarchy",
            "args": [
              "project_id",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "list_projects",
            "line": 135,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "List all requirements projects.\n\nArgs:\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing list of projects with summary information",
            "args": [
              "requirements_manager"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "create_requirement",
            "line": 174,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Create a new requirement in a project.\n\nArgs:\n    project_id: ID of the project\n    title: Requirement title\n    description: Requirement description\n    requirement_type: Type of requirement (functional, non-functional, etc.)\n    priority: Priority level (low, medium, high, critical)\n    status: Current status (new, in-progress, completed, etc.)\n    tags: Optional list of tags\n    parent_id: Optional parent requirement ID\n    dependencies: Optional list of dependency requirement IDs\n    metadata: Optional metadata dictionary\n    created_by: Optional creator identifier\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing requirement_id and creation details",
            "args": [
              "project_id",
              "title",
              "description",
              "requirement_type",
              "priority",
              "status",
              "tags",
              "parent_id",
              "dependencies",
              "metadata",
              "created_by",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "get_requirement",
            "line": 254,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Get a specific requirement by ID.\n\nArgs:\n    project_id: ID of the project\n    requirement_id: ID of the requirement\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing requirement details",
            "args": [
              "project_id",
              "requirement_id",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "update_requirement",
            "line": 288,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Update a requirement with new information.\n\nArgs:\n    project_id: ID of the project\n    requirement_id: ID of the requirement to update\n    title: New title\n    description: New description\n    requirement_type: New requirement type\n    priority: New priority\n    status: New status\n    tags: New tags list\n    parent_id: New parent requirement ID\n    dependencies: New dependencies list\n    metadata: New metadata dictionary\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing update status and details",
            "args": [
              "project_id",
              "requirement_id",
              "title",
              "description",
              "requirement_type",
              "priority",
              "status",
              "tags",
              "parent_id",
              "dependencies",
              "metadata",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": true
          },
          {
            "name": "create_trace",
            "line": 396,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Create a trace between two requirements.\n\nArgs:\n    project_id: ID of the project\n    source_id: ID of the source requirement\n    target_id: ID of the target requirement\n    trace_type: Type of trace (derives, implements, tests, etc.)\n    description: Optional description of the trace\n    metadata: Optional metadata dictionary\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing trace_id and creation details",
            "args": [
              "project_id",
              "source_id",
              "target_id",
              "trace_type",
              "description",
              "metadata",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": false
          },
          {
            "name": "list_traces",
            "line": 479,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "List all requirement traces for a project.\n\nArgs:\n    project_id: ID of the project\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing list of traces",
            "args": [
              "project_id",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "validate_project",
            "line": 524,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Validate all requirements in a project against quality criteria.\n\nArgs:\n    project_id: ID of the project to validate\n    check_completeness: Whether to check requirement completeness\n    check_verifiability: Whether to check requirement verifiability\n    check_clarity: Whether to check requirement clarity\n    custom_criteria: Optional custom validation criteria\n    requirements_manager: Injected RequirementsManager instance\n    \nReturns:\n    Dict containing validation results and summary",
            "args": [
              "project_id",
              "check_completeness",
              "check_verifiability",
              "check_clarity",
              "custom_criteria",
              "requirements_manager"
            ],
            "class": null,
            "complexity": "high",
            "has_side_effects": true
          },
          {
            "name": "analyze_requirements",
            "line": 652,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Analyze requirements for planning readiness using Prometheus.\n\nArgs:\n    project_id: ID of the project to analyze\n    requirements_manager: Injected RequirementsManager instance\n    prometheus_connector: Injected Prometheus connector\n    \nReturns:\n    Dict containing analysis results",
            "args": [
              "project_id",
              "requirements_manager",
              "prometheus_connector"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "create_plan",
            "line": 692,
            "async": true,
            "decorators": [
              "@mcp_tool"
            ],
            "docstring": "Create a strategic plan for the project using Prometheus.\n\nArgs:\n    project_id: ID of the project to plan\n    requirements_manager: Injected RequirementsManager instance\n    prometheus_connector: Injected Prometheus connector\n    \nReturns:\n    Dict containing plan creation results",
            "args": [
              "project_id",
              "requirements_manager",
              "prometheus_connector"
            ],
            "class": null,
            "complexity": "medium",
            "has_side_effects": false
          },
          {
            "name": "get_all_tools",
            "line": 774,
            "async": false,
            "decorators": [],
            "docstring": "Get all Telos MCP tools.",
            "args": [
              "component_manager"
            ],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "RequirementsManagementCapability",
            "line": 38,
            "methods": [],
            "decorators": [
              "@mcp_capability"
            ],
            "docstring": "Capability for creating, reading, updating, and deleting requirements.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementTracingCapability",
            "line": 386,
            "methods": [],
            "decorators": [
              "@mcp_capability"
            ],
            "docstring": "Capability for creating and managing requirement traces and dependencies.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "RequirementValidationCapability",
            "line": 514,
            "methods": [],
            "decorators": [
              "@mcp_capability"
            ],
            "docstring": "Capability for validating requirements quality and completeness.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "PrometheusIntegrationCapability",
            "line": 642,
            "methods": [],
            "decorators": [
              "@mcp_capability"
            ],
            "docstring": "Capability for integration with Prometheus planning and analysis.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [
          {
            "name": "create_project",
            "line": 48,
            "decorator": "@mcp_tool"
          },
          {
            "name": "get_project",
            "line": 96,
            "decorator": "@mcp_tool"
          },
          {
            "name": "list_projects",
            "line": 135,
            "decorator": "@mcp_tool"
          },
          {
            "name": "create_requirement",
            "line": 174,
            "decorator": "@mcp_tool"
          },
          {
            "name": "get_requirement",
            "line": 254,
            "decorator": "@mcp_tool"
          },
          {
            "name": "update_requirement",
            "line": 288,
            "decorator": "@mcp_tool"
          },
          {
            "name": "create_trace",
            "line": 396,
            "decorator": "@mcp_tool"
          },
          {
            "name": "list_traces",
            "line": 479,
            "decorator": "@mcp_tool"
          },
          {
            "name": "validate_project",
            "line": 524,
            "decorator": "@mcp_tool"
          },
          {
            "name": "analyze_requirements",
            "line": 652,
            "decorator": "@mcp_tool"
          },
          {
            "name": "create_plan",
            "line": 692,
            "decorator": "@mcp_tool"
          }
        ],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 9
          },
          {
            "module": "typing.Optional",
            "from": "typing",
            "name": "Optional",
            "alias": null,
            "line": 9
          },
          {
            "module": "tekton.mcp.fastmcp.decorators.mcp_tool",
            "from": "tekton.mcp.fastmcp.decorators",
            "name": "mcp_tool",
            "alias": null,
            "line": 13
          },
          {
            "module": "tekton.mcp.fastmcp.decorators.mcp_capability",
            "from": "tekton.mcp.fastmcp.decorators",
            "name": "mcp_capability",
            "alias": null,
            "line": 13
          },
          {
            "module": "tekton.mcp.fastmcp.schema.MCPTool",
            "from": "tekton.mcp.fastmcp.schema",
            "name": "MCPTool",
            "alias": null,
            "line": 14
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 424
          },
          {
            "module": "datetime.datetime",
            "from": "datetime",
            "name": "datetime",
            "alias": null,
            "line": 550
          }
        ],
        "patterns": [
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          },
          {
            "type": "async",
            "location": "file",
            "line": 0
          },
          {
            "type": "error_handling",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "mcp_tool",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 19,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "decorator",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 20,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "mcp_capability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 24,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "decorator",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 25,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "class_definition",
            "name": "RequirementsManagementCapability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 38,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "create_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 48,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "function",
            "name": "get_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 96,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "function",
            "name": "list_projects",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 135,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "function",
            "name": "create_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 174,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "function",
            "name": "get_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 254,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "function",
            "name": "update_requirement",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 288,
            "priority": "high",
            "reason": "Async function, Has side effects, High complexity, MCP tool"
          },
          {
            "type": "class_definition",
            "name": "RequirementTracingCapability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 386,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "create_trace",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 396,
            "priority": "high",
            "reason": "Async function, High complexity, MCP tool"
          },
          {
            "type": "function",
            "name": "list_traces",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 479,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "class_definition",
            "name": "RequirementValidationCapability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 514,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "validate_project",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 524,
            "priority": "high",
            "reason": "Async function, Has side effects, High complexity, MCP tool"
          },
          {
            "type": "class_definition",
            "name": "PrometheusIntegrationCapability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 642,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "analyze_requirements",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 652,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "function",
            "name": "create_plan",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 692,
            "priority": "high",
            "reason": "Async function, MCP tool"
          },
          {
            "type": "function",
            "name": "get_all_tools",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/tools.py",
            "line": 774,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 796,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/__init__.py",
      "analysis": {
        "functions": [
          {
            "name": "get_all_capabilities",
            "line": 22,
            "async": false,
            "decorators": [],
            "docstring": "Get all Telos MCP capabilities.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_all_tools",
            "line": 31,
            "async": false,
            "decorators": [],
            "docstring": "Get all Telos MCP tools.",
            "args": [],
            "class": null,
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "capabilities.StrategicAnalysisCapability",
            "from": "capabilities",
            "name": "StrategicAnalysisCapability",
            "alias": null,
            "line": 8
          },
          {
            "module": "capabilities.GoalManagementCapability",
            "from": "capabilities",
            "name": "GoalManagementCapability",
            "alias": null,
            "line": 8
          },
          {
            "module": "capabilities.DecisionSupportCapability",
            "from": "capabilities",
            "name": "DecisionSupportCapability",
            "alias": null,
            "line": 8
          },
          {
            "module": "tools.requirements_management_tools",
            "from": "tools",
            "name": "requirements_management_tools",
            "alias": null,
            "line": 14
          },
          {
            "module": "tools.requirement_tracing_tools",
            "from": "tools",
            "name": "requirement_tracing_tools",
            "alias": null,
            "line": 14
          },
          {
            "module": "tools.requirement_validation_tools",
            "from": "tools",
            "name": "requirement_validation_tools",
            "alias": null,
            "line": 14
          },
          {
            "module": "tools.prometheus_integration_tools",
            "from": "tools",
            "name": "prometheus_integration_tools",
            "alias": null,
            "line": 14
          }
        ],
        "patterns": [
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "function",
            "name": "get_all_capabilities",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/__init__.py",
            "line": 22,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "get_all_tools",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/__init__.py",
            "line": 31,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 47,
      "has_tests": false
    },
    {
      "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
      "analysis": {
        "functions": [
          {
            "name": "get_supported_operations",
            "line": 20,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Get list of supported operations.",
            "args": [
              "cls"
            ],
            "class": "StrategicAnalysisCapability",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_capability_metadata",
            "line": 32,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Get capability metadata.",
            "args": [
              "cls"
            ],
            "class": "StrategicAnalysisCapability",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_supported_operations",
            "line": 54,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Get list of supported operations.",
            "args": [
              "cls"
            ],
            "class": "GoalManagementCapability",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_capability_metadata",
            "line": 66,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Get capability metadata.",
            "args": [
              "cls"
            ],
            "class": "GoalManagementCapability",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_supported_operations",
            "line": 88,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Get list of supported operations.",
            "args": [
              "cls"
            ],
            "class": "DecisionSupportCapability",
            "complexity": "low",
            "has_side_effects": false
          },
          {
            "name": "get_capability_metadata",
            "line": 98,
            "async": false,
            "decorators": [
              "@classmethod"
            ],
            "docstring": "Get capability metadata.",
            "args": [
              "cls"
            ],
            "class": "DecisionSupportCapability",
            "complexity": "low",
            "has_side_effects": false
          }
        ],
        "classes": [
          {
            "name": "StrategicAnalysisCapability",
            "line": 12,
            "methods": [
              "get_supported_operations",
              "get_capability_metadata"
            ],
            "decorators": [],
            "docstring": "Capability for strategic analysis and planning operations.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "GoalManagementCapability",
            "line": 46,
            "methods": [
              "get_supported_operations",
              "get_capability_metadata"
            ],
            "decorators": [],
            "docstring": "Capability for strategic goal creation, tracking, and management.",
            "is_singleton": false,
            "landmark_priority": "high"
          },
          {
            "name": "DecisionSupportCapability",
            "line": 80,
            "methods": [
              "get_supported_operations",
              "get_capability_metadata"
            ],
            "decorators": [],
            "docstring": "Capability for strategic decision support and scenario analysis.",
            "is_singleton": false,
            "landmark_priority": "high"
          }
        ],
        "api_endpoints": [],
        "mcp_tools": [],
        "websocket_handlers": [],
        "decorators": [],
        "imports": [
          {
            "module": "typing.Dict",
            "from": "typing",
            "name": "Dict",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.Any",
            "from": "typing",
            "name": "Any",
            "alias": null,
            "line": 8
          },
          {
            "module": "typing.List",
            "from": "typing",
            "name": "List",
            "alias": null,
            "line": 8
          },
          {
            "module": "tekton.mcp.fastmcp.schema.MCPCapability",
            "from": "tekton.mcp.fastmcp.schema",
            "name": "MCPCapability",
            "alias": null,
            "line": 9
          }
        ],
        "patterns": [
          {
            "type": "mcp",
            "location": "file",
            "line": 0
          }
        ],
        "side_effects": [],
        "landmarks": [
          {
            "type": "class_definition",
            "name": "StrategicAnalysisCapability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 12,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "StrategicAnalysisCapability.get_supported_operations",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 20,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "StrategicAnalysisCapability.get_capability_metadata",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 32,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "class_definition",
            "name": "GoalManagementCapability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 46,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "GoalManagementCapability.get_supported_operations",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 54,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "GoalManagementCapability.get_capability_metadata",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 66,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "class_definition",
            "name": "DecisionSupportCapability",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 80,
            "priority": "high",
            "reason": "Class definition"
          },
          {
            "type": "function",
            "name": "DecisionSupportCapability.get_supported_operations",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 88,
            "priority": "high",
            "reason": "Public function"
          },
          {
            "type": "function",
            "name": "DecisionSupportCapability.get_capability_metadata",
            "file": "/Users/cskoons/projects/github/Tekton/Telos/telos/core/mcp/capabilities.py",
            "line": 98,
            "priority": "high",
            "reason": "Public function"
          }
        ]
      },
      "line_count": 116,
      "has_tests": false
    }
  ],
  "summary": {
    "total_files": 39,
    "total_functions": 241,
    "total_classes": 68,
    "total_landmarks": 255,
    "patterns": [
      "fastapi",
      "singleton",
      "async",
      "error_handling",
      "mcp",
      "websocket"
    ],
    "api_endpoints": 30,
    "mcp_tools": 11
  }
}